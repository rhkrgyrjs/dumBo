{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/components/PostTemp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport DOMPurify from \"dompurify\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"./PostTemp.css\";\nimport PostRequestWithAccessToken from \"../api/axios/requestWithAccessToken\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostTemp = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [imageFiles, setImageFiles] = useState([]);\n  const token = useSelector(state => state.auth.accessToken);\n  const onEditorStateChange = state => {\n    setEditorState(state);\n  };\n  const uploadImageCallback = file => {\n    const localUrl = URL.createObjectURL(file);\n    setImageFiles(prev => [...prev, {\n      file,\n      localUrl\n    }]);\n    return Promise.resolve({\n      data: {\n        link: localUrl\n      }\n    });\n  };\n  const uploadImageToServer = async file => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const res = await fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!res.ok) throw new Error(\"이미지 업로드 실패\");\n    const data = await res.json();\n    if (!data.url) throw new Error(\"서버에서 URL을 받지 못함\");\n    return data.url;\n  };\n  const allowedImageDomains = [\"http://localhost:5000/uploads\"];\n  const sanitizeHtmlWithImageFilter = dirtyHtml => {\n    DOMPurify.addHook(\"uponSanitizeElement\", node => {\n      if (node.tagName === \"IMG\") {\n        const src = node.getAttribute(\"src\") || \"\";\n        const allowed = allowedImageDomains.some(domain => src.startsWith(domain));\n        if (!allowed) {\n          node.parentNode && node.parentNode.removeChild(node);\n        }\n      }\n    });\n    const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n    DOMPurify.removeAllHooks();\n    return cleanHtml;\n  };\n  const handleSubmit = async () => {\n    try {\n      const contentState = editorState.getCurrentContent();\n      let rawContent = convertToRaw(contentState);\n      const entityMap = rawContent.entityMap;\n      const urlMap = {};\n      for (let key in entityMap) {\n        const entity = entityMap[key];\n        if (entity.type === \"IMAGE\") {\n          const localSrc = entity.data.src;\n          const imgObj = imageFiles.find(img => img.localUrl === localSrc);\n          if (imgObj) {\n            const serverUrl = await uploadImageToServer(imgObj.file);\n            urlMap[localSrc] = serverUrl;\n            entityMap[key].data.src = serverUrl;\n          }\n        }\n      }\n      const htmlContent = draftToHtml(rawContent);\n      const imgFiltered = sanitizeHtmlWithImageFilter(htmlContent);\n      const title = document.getElementById(\"draft-title\").value;\n      const res = await PostRequestWithAccessToken(token, \"/post\", {\n        title,\n        content: imgFiltered\n      });\n      console.log(\"작성 결과:\", res.data);\n      alert(\"글 작성이 완료되었습니다!\");\n      setEditorState(EditorState.createEmpty());\n      setImageFiles([]);\n    } catch (err) {\n      console.error(\"글 작성 실패:\", err);\n      alert(\"글 작성 중 오류가 발생했습니다.\");\n    }\n  };\n  const imageBlockRenderer = contentBlock => {\n    if (contentBlock.getType() === \"atomic\") {\n      return {\n        component: MediaComponent,\n        editable: false\n      };\n    }\n    return null;\n  };\n  const MediaComponent = props => {\n    const entity = props.contentState.getEntity(props.block.getEntityAt(0));\n    const {\n      src,\n      alt,\n      height,\n      width\n    } = entity.getData();\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: alt || \"\",\n      style: {\n        height: height || \"auto\",\n        width: width || \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-[500px] w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"draft-title\",\n      className: \"border px-3 py-2 rounded-md mb-3\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 border rounded-md overflow-y-auto px-2 py-2 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        onEditorStateChange: onEditorStateChange,\n        wrapperClassName: \"h-full\",\n        editorClassName: \"h-full overflow-y-auto custom-editor\",\n        toolbarClassName: \"mb-2\",\n        toolbar: {\n          options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\", \"list\", \"textAlign\", \"colorPicker\", \"link\", \"emoji\", \"image\", \"remove\", \"history\"],\n          inline: {\n            options: [\"bold\", \"italic\", \"underline\", \"strikethrough\", \"monospace\"]\n          },\n          blockType: {\n            options: [\"Normal\", \"H1\", \"H2\", \"H3\", \"Blockquote\", \"Code\"]\n          },\n          image: {\n            uploadCallback: uploadImageCallback,\n            previewImage: true,\n            alt: {\n              present: true,\n              mandatory: false\n            },\n            uploadEnabled: true,\n            urlEnabled: false\n          }\n        },\n        customBlockRenderFunc: imageBlockRenderer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition\",\n      onClick: handleSubmit,\n      children: \"\\uAE00 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(PostTemp, \"v1oXy2VCIhnuNRoi6hfcZg0ceP4=\", false, function () {\n  return [useSelector];\n});\n_c = PostTemp;\nexport default PostTemp;\nvar _c;\n$RefreshReg$(_c, \"PostTemp\");","map":{"version":3,"names":["React","useState","Editor","EditorState","convertToRaw","draftToHtml","DOMPurify","PostRequestWithAccessToken","useSelector","jsxDEV","_jsxDEV","PostTemp","_s","editorState","setEditorState","createEmpty","imageFiles","setImageFiles","token","state","auth","accessToken","onEditorStateChange","uploadImageCallback","file","localUrl","URL","createObjectURL","prev","Promise","resolve","data","link","uploadImageToServer","formData","FormData","append","res","fetch","method","body","ok","Error","json","url","allowedImageDomains","sanitizeHtmlWithImageFilter","dirtyHtml","addHook","node","tagName","src","getAttribute","allowed","some","domain","startsWith","parentNode","removeChild","cleanHtml","sanitize","removeAllHooks","handleSubmit","contentState","getCurrentContent","rawContent","entityMap","urlMap","key","entity","type","localSrc","imgObj","find","img","serverUrl","htmlContent","imgFiltered","title","document","getElementById","value","content","console","log","alert","err","error","imageBlockRenderer","contentBlock","getType","component","MediaComponent","editable","props","getEntity","block","getEntityAt","alt","height","width","getData","style","fileName","_jsxFileName","lineNumber","columnNumber","className","children","id","placeholder","wrapperClassName","editorClassName","toolbarClassName","toolbar","options","inline","blockType","image","uploadCallback","previewImage","present","mandatory","uploadEnabled","urlEnabled","customBlockRenderFunc","onClick","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/PostTemp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport DOMPurify from \"dompurify\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"./PostTemp.css\"\n\nimport PostRequestWithAccessToken from \"../api/axios/requestWithAccessToken\";\nimport { useSelector } from \"react-redux\";\n\nconst PostTemp = () => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [imageFiles, setImageFiles] = useState([]);\n  const token = useSelector(state => state.auth.accessToken);\n\n  const onEditorStateChange = (state) => {\n    setEditorState(state);\n  };\n\n  const uploadImageCallback = (file) => {\n    const localUrl = URL.createObjectURL(file);\n    setImageFiles((prev) => [...prev, { file, localUrl }]);\n    return Promise.resolve({ data: { link: localUrl } });\n  };\n\n  const uploadImageToServer = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    const res = await fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!res.ok) throw new Error(\"이미지 업로드 실패\");\n\n    const data = await res.json();\n    if (!data.url) throw new Error(\"서버에서 URL을 받지 못함\");\n\n    return data.url;\n  };\n\n  const allowedImageDomains = [\"http://localhost:5000/uploads\"];\n\n  const sanitizeHtmlWithImageFilter = (dirtyHtml) => {\n    DOMPurify.addHook(\"uponSanitizeElement\", (node) => {\n      if (node.tagName === \"IMG\") {\n        const src = node.getAttribute(\"src\") || \"\";\n        const allowed = allowedImageDomains.some((domain) => src.startsWith(domain));\n        if (!allowed) {\n          node.parentNode && node.parentNode.removeChild(node);\n        }\n      }\n    });\n\n    const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n    DOMPurify.removeAllHooks();\n    return cleanHtml;\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const contentState = editorState.getCurrentContent();\n      let rawContent = convertToRaw(contentState);\n      const entityMap = rawContent.entityMap;\n      const urlMap = {};\n\n      for (let key in entityMap) {\n        const entity = entityMap[key];\n        if (entity.type === \"IMAGE\") {\n          const localSrc = entity.data.src;\n          const imgObj = imageFiles.find((img) => img.localUrl === localSrc);\n          if (imgObj) {\n            const serverUrl = await uploadImageToServer(imgObj.file);\n            urlMap[localSrc] = serverUrl;\n            entityMap[key].data.src = serverUrl;\n          }\n        }\n      }\n\n      const htmlContent = draftToHtml(rawContent);\n      const imgFiltered = sanitizeHtmlWithImageFilter(htmlContent);\n\n      const title = document.getElementById(\"draft-title\").value;\n      const res = await PostRequestWithAccessToken(token, \"/post\", {\n        title,\n        content: imgFiltered,\n      });\n\n      console.log(\"작성 결과:\", res.data);\n      alert(\"글 작성이 완료되었습니다!\");\n      setEditorState(EditorState.createEmpty());\n      setImageFiles([]);\n    } catch (err) {\n      console.error(\"글 작성 실패:\", err);\n      alert(\"글 작성 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const imageBlockRenderer = (contentBlock) => {\n    if (contentBlock.getType() === \"atomic\") {\n      return {\n        component: MediaComponent,\n        editable: false,\n      };\n    }\n    return null;\n  };\n\n  const MediaComponent = (props) => {\n    const entity = props.contentState.getEntity(props.block.getEntityAt(0));\n    const { src, alt, height, width } = entity.getData();\n    return (\n      <img\n        src={src}\n        alt={alt || \"\"}\n        style={{ height: height || \"auto\", width: width || \"100%\" }}\n      />\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col h-[500px] w-full\">\n      {/* 제목 입력 */}\n      <input\n        id=\"draft-title\"\n        className=\"border px-3 py-2 rounded-md mb-3\"\n        placeholder=\"제목을 입력하세요\"\n      />\n\n      {/* 에디터 영역 (스크롤 가능, 고정 높이) */}\n      <div className=\"flex-1 border rounded-md overflow-y-auto px-2 py-2 mb-4\">\n        <Editor\n          editorState={editorState}\n          onEditorStateChange={onEditorStateChange}\n          wrapperClassName=\"h-full\"\n          editorClassName=\"h-full overflow-y-auto custom-editor\"\n          toolbarClassName=\"mb-2\"\n          toolbar={{\n            options: [\n              \"inline\",\n              \"blockType\",\n              \"fontSize\",\n              \"fontFamily\",\n              \"list\",\n              \"textAlign\",\n              \"colorPicker\",\n              \"link\",\n              \"emoji\",\n              \"image\",\n              \"remove\",\n              \"history\",\n            ],\n            inline: {\n              options: [\"bold\", \"italic\", \"underline\", \"strikethrough\", \"monospace\"],\n            },\n            blockType: {\n              options: [\n                \"Normal\",\n                \"H1\",\n                \"H2\",\n                \"H3\",\n                \"Blockquote\",\n                \"Code\",\n              ],\n            },\n            image: {\n              uploadCallback: uploadImageCallback,\n              previewImage: true,\n              alt: { present: true, mandatory: false },\n              uploadEnabled: true,\n              urlEnabled: false,\n            },\n          }}\n          customBlockRenderFunc={imageBlockRenderer}\n        />\n      </div>\n\n      {/* 업로드 버튼 */}\n      <button\n        className=\"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition\"\n        onClick={handleSubmit}\n      >\n        글 업로드\n      </button>\n    </div>\n  );\n};\n\nexport default PostTemp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}