{"ast":null,"code":"import requestWithCredentials from \"./axios/requestWithCredentials\";\nimport { getAccessToken, setAccessToken } from \"./token/accessToken\";\nimport { modalPush } from \"../components/modals/LoginModal\";\n\n// 로그인(토큰), 회원가입 등 API 요청 처리\n\n// 토큰 페어 요청 : 로그인과는 다른 API 사용, Access Token 필요\nexport async function requestTokenPair(accessToken) {\n  try {\n    const res = await requestWithCredentials.post('/auth/reissue');\n    setAccessToken(res.data.accessToken.token);\n  } catch (error) {\n    if (error.response) {\n      // 서버로부터 응답은 받았지만, 토큰 재발급이 실패한 경우\n      // 재로그인을 유도해야 함\n      modalPush('login');\n    } else if (error.request) {\n      // 서버로부터 응답이 오지 않을 경우\n    } else {\n      // 다른 에러 발생 시\n    }\n  }\n}\n\n// 로그인\nexport async function login(username, password) {\n  try {\n    // 로그인 요청\n    const res = await requestWithCredentials.post('/auth/login', {\n      'username': username,\n      'password': password\n    });\n    // 로그인 성공 시 액세스 토큰 저장\n    setAccessToken(res.data.accessToken.token);\n  } catch (error) {\n    if (error.response) {\n      // 서버로부터 응답은 받았지만, 로그인이 실패한 경우\n      // HTTP 응답 코드에 따라 분기할 것인지는 나중에 선택하자\n      console.log(error.response);\n    } else if (error.request) {\n      // 서버로부터 응답이 오지 않을 경우\n      console.log(error.request);\n    } else {\n      // 다른 에러 발생 시\n      console.log(error);\n    }\n  }\n}\n\n// 회원가입\nfunction signup(username, email, password, passwordCheck) {\n  // 기입 정보 체크 -> 기입 정보가 올바르지 않다면 요청 보내지 않음\n  // 회원가입 요청\n  // 요청 성공/실패 여부 리턴\n}","map":{"version":3,"names":["requestWithCredentials","getAccessToken","setAccessToken","modalPush","requestTokenPair","accessToken","res","post","data","token","error","response","request","login","username","password","console","log","signup","email","passwordCheck"],"sources":["/home/kovox/바탕화면/dumbo/frontend/src/api/auth.js"],"sourcesContent":["import requestWithCredentials from \"./axios/requestWithCredentials\";\nimport { getAccessToken, setAccessToken } from \"./token/accessToken\";\nimport { modalPush } from \"../components/modals/LoginModal\";\n\n// 로그인(토큰), 회원가입 등 API 요청 처리\n\n// 토큰 페어 요청 : 로그인과는 다른 API 사용, Access Token 필요\nexport async function requestTokenPair(accessToken)\n{\n    try\n    {\n        const res = await requestWithCredentials.post(\n            '/auth/reissue'\n        );\n        setAccessToken(res.data.accessToken.token);\n    }\n    catch (error)\n    {\n        if (error.response)\n        {\n            // 서버로부터 응답은 받았지만, 토큰 재발급이 실패한 경우\n            // 재로그인을 유도해야 함\n            modalPush('login');\n        }\n        else if (error.request)\n        {\n            // 서버로부터 응답이 오지 않을 경우\n        }\n        else\n        {\n            // 다른 에러 발생 시\n        }\n    }\n}\n\n// 로그인\nexport async function login(username, password)\n{\n    try\n    {\n        // 로그인 요청\n        const res = await requestWithCredentials.post(\n            '/auth/login',\n            { 'username' : username, 'password' : password}\n        );\n        // 로그인 성공 시 액세스 토큰 저장\n        setAccessToken(res.data.accessToken.token);\n    }\n    catch (error)\n    {\n        if (error.response)\n        {\n            // 서버로부터 응답은 받았지만, 로그인이 실패한 경우\n            // HTTP 응답 코드에 따라 분기할 것인지는 나중에 선택하자\n            console.log(error.response);\n        }\n        else if (error.request)\n        {\n            // 서버로부터 응답이 오지 않을 경우\n            console.log(error.request);\n        }\n        else\n        {\n            // 다른 에러 발생 시\n            console.log(error);\n        }\n    }\n}\n\n// 회원가입\nfunction signup(username, email, password, passwordCheck)\n{\n    // 기입 정보 체크 -> 기입 정보가 올바르지 않다면 요청 보내지 않음\n    // 회원가입 요청\n    // 요청 성공/실패 여부 리턴\n}\n"],"mappings":"AAAA,OAAOA,sBAAsB,MAAM,gCAAgC;AACnE,SAASC,cAAc,EAAEC,cAAc,QAAQ,qBAAqB;AACpE,SAASC,SAAS,QAAQ,iCAAiC;;AAE3D;;AAEA;AACA,OAAO,eAAeC,gBAAgBA,CAACC,WAAW,EAClD;EACI,IACA;IACI,MAAMC,GAAG,GAAG,MAAMN,sBAAsB,CAACO,IAAI,CACzC,eACJ,CAAC;IACDL,cAAc,CAACI,GAAG,CAACE,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;EAC9C,CAAC,CACD,OAAOC,KAAK,EACZ;IACI,IAAIA,KAAK,CAACC,QAAQ,EAClB;MACI;MACA;MACAR,SAAS,CAAC,OAAO,CAAC;IACtB,CAAC,MACI,IAAIO,KAAK,CAACE,OAAO,EACtB;MACI;IAAA,CACH,MAED;MACI;IAAA;EAER;AACJ;;AAEA;AACA,OAAO,eAAeC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAC9C;EACI,IACA;IACI;IACA,MAAMT,GAAG,GAAG,MAAMN,sBAAsB,CAACO,IAAI,CACzC,aAAa,EACb;MAAE,UAAU,EAAGO,QAAQ;MAAE,UAAU,EAAGC;IAAQ,CAClD,CAAC;IACD;IACAb,cAAc,CAACI,GAAG,CAACE,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;EAC9C,CAAC,CACD,OAAOC,KAAK,EACZ;IACI,IAAIA,KAAK,CAACC,QAAQ,EAClB;MACI;MACA;MACAK,OAAO,CAACC,GAAG,CAACP,KAAK,CAACC,QAAQ,CAAC;IAC/B,CAAC,MACI,IAAID,KAAK,CAACE,OAAO,EACtB;MACI;MACAI,OAAO,CAACC,GAAG,CAACP,KAAK,CAACE,OAAO,CAAC;IAC9B,CAAC,MAED;MACI;MACAI,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;IACtB;EACJ;AACJ;;AAEA;AACA,SAASQ,MAAMA,CAACJ,QAAQ,EAAEK,KAAK,EAAEJ,QAAQ,EAAEK,aAAa,EACxD;EACI;EACA;EACA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}