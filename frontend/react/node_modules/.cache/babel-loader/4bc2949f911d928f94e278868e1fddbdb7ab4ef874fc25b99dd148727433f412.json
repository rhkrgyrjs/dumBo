{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/postTest/ArticleTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PostCard from './PostCard'; // 경로에 맞게 조정하세요\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bigComments = [/* 댓글 데이터는 동일하므로 생략 */];\nconst samplePosts = Array(20).fill(null).map((_, i) => ({\n  id: `post_${i + 1}`,\n  nickname: `홍길동_${i + 1}`,\n  title: `게시글 제목 ${i + 1}`,\n  createdAt: '2025-06-13T10:00:00Z',\n  updatedAt: '2025-06-13T12:00:00Z',\n  contentHtml: `<p>게시글 내용 예시 ${i + 1}. ...</p>`,\n  // 생략\n  thumbnailImage: 'https://via.placeholder.com/600x300',\n  comments: bigComments\n}));\nexport default function ArticleTest() {\n  _s();\n  const [posts, setPosts] = useState(samplePosts.slice(0, 5)); // 처음 5개만 로드\n  const loadMoreRef = useRef();\n  const MAX_POSTS = 10; // 화면에 최대 10개 게시글 유지\n\n  // 다음 게시글 5개 추가 로드 + 기존 절반 삭제 로직 추가\n  const loadMore = useCallback(() => {\n    setPosts(prev => {\n      if (prev.length >= samplePosts.length) return prev;\n      let newPosts = [...prev, ...samplePosts.slice(prev.length, prev.length + 5)];\n      if (newPosts.length > MAX_POSTS) {\n        // 게시글이 MAX_POSTS 초과하면 앞쪽 절반 잘라내기\n        const startCutIndex = Math.floor(newPosts.length / 2);\n        newPosts = newPosts.slice(startCutIndex);\n      }\n      return newPosts;\n    });\n  }, []);\n  useEffect(() => {\n    if (!loadMoreRef.current) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        loadMore();\n      }\n    }, {\n      rootMargin: '200px'\n    });\n    observer.observe(loadMoreRef.current);\n    return () => {\n      if (loadMoreRef.current) observer.unobserve(loadMoreRef.current);\n    };\n  }, [loadMore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 px-4\",\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loadMoreRef,\n      style: {\n        height: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticleTest, \"1kVeciPh12yLokrVuz+Q9iUpQw4=\");\n_c = ArticleTest;\nvar _c;\n$RefreshReg$(_c, \"ArticleTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","PostCard","jsxDEV","_jsxDEV","bigComments","samplePosts","Array","fill","map","_","i","id","nickname","title","createdAt","updatedAt","contentHtml","thumbnailImage","comments","ArticleTest","_s","posts","setPosts","slice","loadMoreRef","MAX_POSTS","loadMore","prev","length","newPosts","startCutIndex","Math","floor","current","observer","IntersectionObserver","entry","isIntersecting","rootMargin","observe","unobserve","className","children","post","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","height","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/postTest/ArticleTest.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PostCard from './PostCard'; // 경로에 맞게 조정하세요\n\nconst bigComments = [ /* 댓글 데이터는 동일하므로 생략 */ ];\n\nconst samplePosts = Array(20)\n  .fill(null)\n  .map((_, i) => ({\n    id: `post_${i + 1}`,\n    nickname: `홍길동_${i + 1}`,\n    title: `게시글 제목 ${i + 1}`,\n    createdAt: '2025-06-13T10:00:00Z',\n    updatedAt: '2025-06-13T12:00:00Z',\n    contentHtml: `<p>게시글 내용 예시 ${i + 1}. ...</p>`, // 생략\n    thumbnailImage: 'https://via.placeholder.com/600x300',\n    comments: bigComments,\n  }));\n\nexport default function ArticleTest() {\n  const [posts, setPosts] = useState(samplePosts.slice(0, 5)); // 처음 5개만 로드\n  const loadMoreRef = useRef();\n\n  const MAX_POSTS = 10; // 화면에 최대 10개 게시글 유지\n\n  // 다음 게시글 5개 추가 로드 + 기존 절반 삭제 로직 추가\n  const loadMore = useCallback(() => {\n    setPosts((prev) => {\n      if (prev.length >= samplePosts.length) return prev;\n\n      let newPosts = [...prev, ...samplePosts.slice(prev.length, prev.length + 5)];\n\n      if (newPosts.length > MAX_POSTS) {\n        // 게시글이 MAX_POSTS 초과하면 앞쪽 절반 잘라내기\n        const startCutIndex = Math.floor(newPosts.length / 2);\n        newPosts = newPosts.slice(startCutIndex);\n      }\n\n      return newPosts;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!loadMoreRef.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          loadMore();\n        }\n      },\n      { rootMargin: '200px' }\n    );\n\n    observer.observe(loadMoreRef.current);\n\n    return () => {\n      if (loadMoreRef.current) observer.unobserve(loadMoreRef.current);\n    };\n  }, [loadMore]);\n\n  return (\n    <div className=\"max-w-xl mx-auto mt-10 px-4\">\n      {posts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n\n      {/* 무한스크롤 감지용 div */}\n      <div ref={loadMoreRef} style={{ height: 1 }} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}