{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/postTest/ArticleTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PostCard from './PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/dumbo-backend/post';\nexport default function ArticleTest() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [cursor, setCursor] = useState(null); // { createdAt, postId }\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const loadMoreRef = useRef(null);\n  const fetchPosts = useCallback(async () => {\n    if (isLoading || !hasMore) return;\n    setIsLoading(true);\n    try {\n      const params = new URLSearchParams();\n      if (cursor !== null && cursor !== void 0 && cursor.createdAt) params.append('createdAtCursor', cursor.createdAt);\n      if (cursor !== null && cursor !== void 0 && cursor.postId) params.append('postIdCursor', cursor.postId);\n      // 최신 글부터 보기이므로 reverse는 false 또는 생략\n\n      const res = await fetch(`${API_URL}?${params.toString()}`);\n      if (!res.ok) throw new Error('Failed to fetch posts');\n      const json = await res.json();\n      setPosts(prev => [...prev, ...json.data]);\n      setHasMore(json.hasMore);\n      if (json.hasMore) {\n        setCursor({\n          createdAt: json.nextCreatedAt,\n          postId: json.nextPostId\n        });\n      }\n    } catch (error) {\n      console.error('게시글 로딩 오류:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [cursor, hasMore, isLoading]);\n\n  // 최초 로드\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  // IntersectionObserver로 무한 스크롤 트리거\n  useEffect(() => {\n    if (!loadMoreRef.current) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasMore && !isLoading) {\n        fetchPosts();\n      }\n    }, {\n      rootMargin: '200px'\n    });\n    observer.observe(loadMoreRef.current);\n    return () => {\n      if (loadMoreRef.current) observer.unobserve(loadMoreRef.current);\n    };\n  }, [fetchPosts, hasMore, isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto mt-10 px-4\",\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.post_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loadMoreRef,\n      style: {\n        height: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), !hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-400 py-4\",\n      children: \"\\uBAA8\\uB4E0 \\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC654\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert('글쓰기 클릭됨'),\n      className: \" fixed left-4 bottom-4 px-5 py-3 bg-indigo-700 text-white rounded-lg shadow-lg hover:bg-blue-700 active:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-400 z-50 cursor-pointer \",\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticleTest, \"B1WrI9GbM8I4mn2Z+KEVLUe1yQw=\");\n_c = ArticleTest;\nvar _c;\n$RefreshReg$(_c, \"ArticleTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","PostCard","jsxDEV","_jsxDEV","API_URL","ArticleTest","_s","posts","setPosts","cursor","setCursor","hasMore","setHasMore","isLoading","setIsLoading","loadMoreRef","fetchPosts","params","URLSearchParams","createdAt","append","postId","res","fetch","toString","ok","Error","json","prev","data","nextCreatedAt","nextPostId","error","console","current","observer","IntersectionObserver","entry","isIntersecting","rootMargin","observe","unobserve","className","children","map","post","post_id","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","height","onClick","alert","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/postTest/ArticleTest.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PostCard from './PostCard';\n\nconst API_URL = 'http://localhost:8080/dumbo-backend/post';\n\nexport default function ArticleTest() {\n  const [posts, setPosts] = useState([]);\n  const [cursor, setCursor] = useState(null); // { createdAt, postId }\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadMoreRef = useRef(null);\n\n  const fetchPosts = useCallback(async () => {\n    if (isLoading || !hasMore) return;\n\n    setIsLoading(true);\n\n    try {\n      const params = new URLSearchParams();\n      if (cursor?.createdAt) params.append('createdAtCursor', cursor.createdAt);\n      if (cursor?.postId) params.append('postIdCursor', cursor.postId);\n      // 최신 글부터 보기이므로 reverse는 false 또는 생략\n\n      const res = await fetch(`${API_URL}?${params.toString()}`);\n      if (!res.ok) throw new Error('Failed to fetch posts');\n\n      const json = await res.json();\n\n      setPosts((prev) => [...prev, ...json.data]);\n\n      setHasMore(json.hasMore);\n      if (json.hasMore) {\n        setCursor({\n          createdAt: json.nextCreatedAt,\n          postId: json.nextPostId,\n        });\n      }\n    } catch (error) {\n      console.error('게시글 로딩 오류:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [cursor, hasMore, isLoading]);\n\n  // 최초 로드\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  // IntersectionObserver로 무한 스크롤 트리거\n  useEffect(() => {\n    if (!loadMoreRef.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && hasMore && !isLoading) {\n          fetchPosts();\n        }\n      },\n      { rootMargin: '200px' }\n    );\n\n    observer.observe(loadMoreRef.current);\n\n    return () => {\n      if (loadMoreRef.current) observer.unobserve(loadMoreRef.current);\n    };\n  }, [fetchPosts, hasMore, isLoading]);\n\n  return (\n    <div className=\"max-w-2xl mx-auto mt-10 px-4\">\n      {posts.map((post) => (\n        <PostCard key={post.post_id} post={post} />\n      ))}\n      <div ref={loadMoreRef} style={{ height: 1 }} />\n\n      {isLoading && (\n        <div className=\"flex justify-center py-6\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\" />\n        </div>\n      )}\n\n      {!hasMore && (\n        <div className=\"text-center text-gray-400 py-4\">\n          모든 게시글을 불러왔습니다.\n        </div>\n      )}\n      {/* 글쓰기 버튼 - 고정 */}\n      <button\n        onClick={() => alert('글쓰기 클릭됨')}\n        className=\"\n          fixed\n          left-4\n          bottom-4\n          px-5\n          py-3\n        bg-indigo-700\n        text-white\n        rounded-lg\n        shadow-lg\n        hover:bg-blue-700\n        active:bg-blue-800\n        focus:outline-none\n        focus:ring-2\n        focus:ring-blue-400\n        z-50\n        cursor-pointer\n              \"\n        >\n          글쓰기\n        </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}