{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/postTest/PostCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Card, CardContent } from './ui/card';\nimport CommentsSection from './CommentsSection';\n\n// 날짜 포맷팅 함수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDateTime(timestamp) {\n  if (!timestamp) return '';\n  const date = new Date(timestamp);\n  const yyyy = date.getFullYear();\n  const mm = date.getMonth() + 1;\n  const dd = date.getDate();\n  let hh = date.getHours();\n  const min = date.getMinutes().toString().padStart(2, '0');\n  const ampm = hh < 12 ? '오전' : '오후';\n  hh = hh % 12;\n  if (hh === 0) hh = 12;\n  return `${yyyy}. ${mm}. ${dd}. ${ampm} ${hh}:${min}`;\n}\n\n// HTML을 안전하게 자르되 <img> 태그는 제거하는 함수\nfunction truncateHtmlSafely(html, maxLength) {\n  const div = document.createElement('div');\n  div.innerHTML = html;\n\n  // 이미지 태그 제거\n  const imgs = div.querySelectorAll('img');\n  imgs.forEach(img => img.remove());\n  let currentLength = 0;\n  function walk(node) {\n    if (currentLength >= maxLength) return null;\n    if (node.nodeType === Node.TEXT_NODE) {\n      const remaining = maxLength - currentLength;\n      const text = node.textContent.slice(0, remaining);\n      currentLength += text.length;\n      return document.createTextNode(text);\n    }\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const clone = node.cloneNode(false);\n      const children = Array.from(node.childNodes);\n      for (let child of children) {\n        const result = walk(child);\n        if (result) clone.appendChild(result);\n        if (currentLength >= maxLength) break;\n      }\n      return clone;\n    }\n    return null;\n  }\n  const result = walk(div);\n  const container = document.createElement('div');\n  if (result) container.appendChild(result);\n  return container.innerHTML;\n}\nconst COMMENTS_FIXED_HEIGHT = 384; // px\n\nexport default function PostCard({\n  post\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n  const [showComments, setShowComments] = useState(false);\n  const [repliesToggledMap, setRepliesToggledMap] = useState({});\n  const [animatedHeight, setAnimatedHeight] = useState(0);\n  const [needsTruncation, setNeedsTruncation] = useState(false);\n  const previewRef = useRef(null);\n  const fullContentRef = useRef(null);\n  const {\n    author_nickname: nickname,\n    title,\n    content_html: contentHtml,\n    thumbnail_img_url: thumbnailImage,\n    comments = [],\n    created_at,\n    updated_at\n  } = post;\n  const createdAt = created_at ? created_at * 1000 : null;\n  const updatedAt = updated_at !== null && updated_at !== undefined ? updated_at * 1000 : null;\n  const isModified = updatedAt && updatedAt !== createdAt;\n\n  // 미리보기용 HTML: 이미지 태그 제거\n  const previewHtml = truncateHtmlSafely(contentHtml, 10000);\n\n  // 텍스트 내용만 최대길이까지 자르기 (더보기 표시 위해서)\n  // 여기서 300자 제한은 예시입니다. 필요 시 조절 가능\n  const previewTextMaxLength = 300;\n\n  // 순수 텍스트 추출 헬퍼 함수 (HTML 태그 제거)\n  function extractTextFromHtml(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.textContent || div.innerText || '';\n  }\n\n  // 더보기용 텍스트 (자연스럽게 끝내기 위한 마침표 등 고려 가능)\n  const fullText = extractTextFromHtml(previewHtml);\n  const isTextTooLong = fullText.length > previewTextMaxLength;\n  const truncatedText = isTextTooLong ? fullText.slice(0, previewTextMaxLength) : fullText;\n\n  // 본문 클릭 시 펼침 효과 (단, 접기 상태에서만)\n  function onContentOrThumbnailClick() {\n    if (!expanded && needsTruncation) {\n      setExpanded(true);\n    }\n  }\n\n  // 더보기 클릭 (접기 버튼 제외한 부분에서 본문 클릭 시 펼침과 별도로 클릭 이벤트 분리)\n  function onMoreClick(e) {\n    e.stopPropagation();\n    setExpanded(true);\n  }\n\n  // 접기 버튼 클릭 (본문 클릭과 분리)\n  function onCollapseClick(e) {\n    e.stopPropagation();\n    setExpanded(false);\n  }\n\n  // 댓글 영역 애니메이션 높이 조절\n  useEffect(() => {\n    if (showComments) {\n      setAnimatedHeight(0);\n      const timeoutId = setTimeout(() => {\n        setAnimatedHeight(COMMENTS_FIXED_HEIGHT);\n      }, 10);\n      return () => clearTimeout(timeoutId);\n    } else {\n      setAnimatedHeight(0);\n    }\n  }, [showComments]);\n\n  // 본문 미리보기 높이 체크 (이미지 제외)\n  useEffect(() => {\n    if (previewRef.current) {\n      const height = previewRef.current.scrollHeight;\n      setNeedsTruncation(height > 200);\n    }\n  }, [previewHtml]);\n\n  // 전체 본문(이미지 포함) 높이 체크 (이미지 로딩 완료 후)\n  useEffect(() => {\n    if (!fullContentRef.current) return;\n    const imgs = fullContentRef.current.querySelectorAll('img');\n    if (imgs.length === 0) {\n      setNeedsTruncation(fullContentRef.current.scrollHeight > 200);\n      return;\n    }\n    let loadedCount = 0;\n    const onLoadOrError = () => {\n      loadedCount += 1;\n      if (loadedCount === imgs.length) {\n        setNeedsTruncation(fullContentRef.current.scrollHeight > 200);\n      }\n    };\n    imgs.forEach(img => {\n      if (img.complete) {\n        onLoadOrError();\n      } else {\n        img.addEventListener('load', onLoadOrError);\n        img.addEventListener('error', onLoadOrError);\n      }\n    });\n    return () => {\n      imgs.forEach(img => {\n        img.removeEventListener('load', onLoadOrError);\n        img.removeEventListener('error', onLoadOrError);\n      });\n    };\n  }, [contentHtml]);\n\n  // 댓글 토글 상태 변경\n  function handleRepliesToggle(commentId, isOpen) {\n    setRepliesToggledMap(prev => ({\n      ...prev,\n      [commentId]: isOpen\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-6 transition-all duration-300\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), \" \\xB7\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: createdAt ? formatDateTime(createdAt) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), isModified && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-xs text-gray-400\",\n          children: [\"(\\uC218\\uC815\\uB428: \", formatDateTime(updatedAt), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), !expanded && needsTruncation && thumbnailImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-2 cursor-pointer\",\n        onClick: onContentOrThumbnailClick,\n        role: \"button\",\n        tabIndex: 0,\n        onKeyDown: e => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            onContentOrThumbnailClick();\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbnailImage,\n          alt: \"thumbnail\",\n          className: \"rounded max-h-64 object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `prose prose-sm max-w-none text-gray-800 select-text group ${!expanded && needsTruncation ? 'cursor-pointer' : ''}`,\n        onClick: () => {\n          // 펼침이 필요한 경우에만 본문 클릭 시 펼침\n          if (!expanded && needsTruncation) onContentOrThumbnailClick();\n        },\n        \"aria-expanded\": expanded,\n        ref: previewRef\n        // 드래그 방해하지 않도록 선택 가능 유지, 접기는 버튼으로만\n        ,\n        children: expanded ?\n        /*#__PURE__*/\n        // 전체 본문 HTML\n        _jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: contentHtml\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // 잘린 텍스트 + '... 더보기'\n        _jsxDEV(\"p\", {\n          children: [truncatedText, isTextTooLong && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"... \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-600 underline cursor-pointer group-hover:no-underline group-hover:text-blue-800\",\n              onClick: onMoreClick,\n              onKeyDown: e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  onMoreClick(e);\n                }\n              },\n              role: \"button\",\n              tabIndex: 0,\n              style: {\n                userSelect: 'none'\n              },\n              children: \"\\uB354\\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), expanded && needsTruncation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCollapseClick,\n          className: \"text-blue-600 underline cursor-pointer select-auto\",\n          children: \"\\uC811\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert('추천!'),\n            children: \"\\uD83D\\uDC4D \\uCD94\\uCC9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert('비추천!'),\n            className: \"bg-red-500 hover:bg-red-600 text-white px-2 rounded\",\n            children: \"\\uD83D\\uDC4E \\uBE44\\uCD94\\uCC9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowComments(prev => !prev),\n          className: \"bg-gray-500 hover:bg-gray-600 text-white px-2 rounded\",\n          children: showComments ? '💬 댓글 닫기' : '💬 댓글 보기'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: animatedHeight,\n          transition: 'height 300ms ease',\n          overflow: 'hidden'\n        },\n        className: \"mt-4\",\n        \"aria-expanded\": showComments,\n        children: showComments && /*#__PURE__*/_jsxDEV(CommentsSection, {\n          comments: comments,\n          onToggle: handleRepliesToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: fullContentRef,\n        className: \"invisible absolute left-[-9999px] top-0 w-[calc(100%-2rem)] max-w-none\",\n        dangerouslySetInnerHTML: {\n          __html: contentHtml\n        },\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(PostCard, \"0g71kDKlqGK0k/SXJzuy4CivNh0=\");\n_c = PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","CommentsSection","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDateTime","timestamp","date","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","hh","getHours","min","getMinutes","toString","padStart","ampm","truncateHtmlSafely","html","maxLength","div","document","createElement","innerHTML","imgs","querySelectorAll","forEach","img","remove","currentLength","walk","node","nodeType","Node","TEXT_NODE","remaining","text","textContent","slice","length","createTextNode","ELEMENT_NODE","clone","cloneNode","children","Array","from","childNodes","child","result","appendChild","container","COMMENTS_FIXED_HEIGHT","PostCard","post","_s","expanded","setExpanded","showComments","setShowComments","repliesToggledMap","setRepliesToggledMap","animatedHeight","setAnimatedHeight","needsTruncation","setNeedsTruncation","previewRef","fullContentRef","author_nickname","nickname","title","content_html","contentHtml","thumbnail_img_url","thumbnailImage","comments","created_at","updated_at","createdAt","updatedAt","undefined","isModified","previewHtml","previewTextMaxLength","extractTextFromHtml","innerText","fullText","isTextTooLong","truncatedText","onContentOrThumbnailClick","onMoreClick","e","stopPropagation","onCollapseClick","timeoutId","setTimeout","clearTimeout","current","height","scrollHeight","loadedCount","onLoadOrError","complete","addEventListener","removeEventListener","handleRepliesToggle","commentId","isOpen","prev","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","tabIndex","onKeyDown","key","preventDefault","src","alt","ref","dangerouslySetInnerHTML","__html","style","userSelect","alert","transition","overflow","onToggle","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/postTest/PostCard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Card, CardContent } from './ui/card';\nimport CommentsSection from './CommentsSection';\n\n// 날짜 포맷팅 함수\nfunction formatDateTime(timestamp) {\n  if (!timestamp) return '';\n  const date = new Date(timestamp);\n\n  const yyyy = date.getFullYear();\n  const mm = date.getMonth() + 1;\n  const dd = date.getDate();\n\n  let hh = date.getHours();\n  const min = date.getMinutes().toString().padStart(2, '0');\n\n  const ampm = hh < 12 ? '오전' : '오후';\n  hh = hh % 12;\n  if (hh === 0) hh = 12;\n\n  return `${yyyy}. ${mm}. ${dd}. ${ampm} ${hh}:${min}`;\n}\n\n// HTML을 안전하게 자르되 <img> 태그는 제거하는 함수\nfunction truncateHtmlSafely(html, maxLength) {\n  const div = document.createElement('div');\n  div.innerHTML = html;\n\n  // 이미지 태그 제거\n  const imgs = div.querySelectorAll('img');\n  imgs.forEach((img) => img.remove());\n\n  let currentLength = 0;\n\n  function walk(node) {\n    if (currentLength >= maxLength) return null;\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      const remaining = maxLength - currentLength;\n      const text = node.textContent.slice(0, remaining);\n      currentLength += text.length;\n      return document.createTextNode(text);\n    }\n\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const clone = node.cloneNode(false);\n      const children = Array.from(node.childNodes);\n\n      for (let child of children) {\n        const result = walk(child);\n        if (result) clone.appendChild(result);\n        if (currentLength >= maxLength) break;\n      }\n\n      return clone;\n    }\n\n    return null;\n  }\n\n  const result = walk(div);\n  const container = document.createElement('div');\n  if (result) container.appendChild(result);\n\n  return container.innerHTML;\n}\n\nconst COMMENTS_FIXED_HEIGHT = 384; // px\n\nexport default function PostCard({ post }) {\n  const [expanded, setExpanded] = useState(false);\n  const [showComments, setShowComments] = useState(false);\n  const [repliesToggledMap, setRepliesToggledMap] = useState({});\n  const [animatedHeight, setAnimatedHeight] = useState(0);\n  const [needsTruncation, setNeedsTruncation] = useState(false);\n\n  const previewRef = useRef(null);\n  const fullContentRef = useRef(null);\n\n  const {\n    author_nickname: nickname,\n    title,\n    content_html: contentHtml,\n    thumbnail_img_url: thumbnailImage,\n    comments = [],\n    created_at,\n    updated_at,\n  } = post;\n\n  const createdAt = created_at ? created_at * 1000 : null;\n  const updatedAt = updated_at !== null && updated_at !== undefined ? updated_at * 1000 : null;\n  const isModified = updatedAt && updatedAt !== createdAt;\n\n  // 미리보기용 HTML: 이미지 태그 제거\n  const previewHtml = truncateHtmlSafely(contentHtml, 10000);\n\n  // 텍스트 내용만 최대길이까지 자르기 (더보기 표시 위해서)\n  // 여기서 300자 제한은 예시입니다. 필요 시 조절 가능\n  const previewTextMaxLength = 300;\n\n  // 순수 텍스트 추출 헬퍼 함수 (HTML 태그 제거)\n  function extractTextFromHtml(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.textContent || div.innerText || '';\n  }\n\n  // 더보기용 텍스트 (자연스럽게 끝내기 위한 마침표 등 고려 가능)\n  const fullText = extractTextFromHtml(previewHtml);\n  const isTextTooLong = fullText.length > previewTextMaxLength;\n\n  const truncatedText = isTextTooLong\n    ? fullText.slice(0, previewTextMaxLength)\n    : fullText;\n\n  // 본문 클릭 시 펼침 효과 (단, 접기 상태에서만)\n  function onContentOrThumbnailClick() {\n    if (!expanded && needsTruncation) {\n      setExpanded(true);\n    }\n  }\n\n  // 더보기 클릭 (접기 버튼 제외한 부분에서 본문 클릭 시 펼침과 별도로 클릭 이벤트 분리)\n  function onMoreClick(e) {\n    e.stopPropagation();\n    setExpanded(true);\n  }\n\n  // 접기 버튼 클릭 (본문 클릭과 분리)\n  function onCollapseClick(e) {\n    e.stopPropagation();\n    setExpanded(false);\n  }\n\n  // 댓글 영역 애니메이션 높이 조절\n  useEffect(() => {\n    if (showComments) {\n      setAnimatedHeight(0);\n      const timeoutId = setTimeout(() => {\n        setAnimatedHeight(COMMENTS_FIXED_HEIGHT);\n      }, 10);\n      return () => clearTimeout(timeoutId);\n    } else {\n      setAnimatedHeight(0);\n    }\n  }, [showComments]);\n\n  // 본문 미리보기 높이 체크 (이미지 제외)\n  useEffect(() => {\n    if (previewRef.current) {\n      const height = previewRef.current.scrollHeight;\n      setNeedsTruncation(height > 200);\n    }\n  }, [previewHtml]);\n\n  // 전체 본문(이미지 포함) 높이 체크 (이미지 로딩 완료 후)\n  useEffect(() => {\n    if (!fullContentRef.current) return;\n\n    const imgs = fullContentRef.current.querySelectorAll('img');\n    if (imgs.length === 0) {\n      setNeedsTruncation(fullContentRef.current.scrollHeight > 200);\n      return;\n    }\n\n    let loadedCount = 0;\n    const onLoadOrError = () => {\n      loadedCount += 1;\n      if (loadedCount === imgs.length) {\n        setNeedsTruncation(fullContentRef.current.scrollHeight > 200);\n      }\n    };\n\n    imgs.forEach((img) => {\n      if (img.complete) {\n        onLoadOrError();\n      } else {\n        img.addEventListener('load', onLoadOrError);\n        img.addEventListener('error', onLoadOrError);\n      }\n    });\n\n    return () => {\n      imgs.forEach((img) => {\n        img.removeEventListener('load', onLoadOrError);\n        img.removeEventListener('error', onLoadOrError);\n      });\n    };\n  }, [contentHtml]);\n\n  // 댓글 토글 상태 변경\n  function handleRepliesToggle(commentId, isOpen) {\n    setRepliesToggledMap((prev) => ({\n      ...prev,\n      [commentId]: isOpen,\n    }));\n  }\n\n  return (\n    <Card className=\"mb-6 transition-all duration-300\">\n      <CardContent>\n        {/* 작성자, 날짜, 수정 정보 */}\n        <div className=\"mb-2 text-sm text-gray-600\">\n          <span className=\"font-semibold\">{nickname}</span> ·{' '}\n          <span>{createdAt ? formatDateTime(createdAt) : ''}</span>\n          {isModified && (\n            <span className=\"ml-2 text-xs text-gray-400\">\n              (수정됨: {formatDateTime(updatedAt)})\n            </span>\n          )}\n        </div>\n\n        {/* 제목 */}\n        <h2 className=\"text-lg font-bold mb-2\">{title}</h2>\n\n        {/* 썸네일 (접기 상태 + 본문 길 때만) + 클릭 시 펼침 */}\n        {!expanded && needsTruncation && thumbnailImage && (\n          <div\n            className=\"flex justify-center mb-2 cursor-pointer\"\n            onClick={onContentOrThumbnailClick}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ') {\n                e.preventDefault();\n                onContentOrThumbnailClick();\n              }\n            }}\n          >\n            <img\n              src={thumbnailImage}\n              alt=\"thumbnail\"\n              className=\"rounded max-h-64 object-cover\"\n            />\n          </div>\n        )}\n\n        {/* 본문 영역 */}\n        <div\n          className={`prose prose-sm max-w-none text-gray-800 select-text group ${\n            !expanded && needsTruncation ? 'cursor-pointer' : ''\n          }`}\n          onClick={() => {\n            // 펼침이 필요한 경우에만 본문 클릭 시 펼침\n            if (!expanded && needsTruncation) onContentOrThumbnailClick();\n          }}\n          aria-expanded={expanded}\n          ref={previewRef}\n          // 드래그 방해하지 않도록 선택 가능 유지, 접기는 버튼으로만\n        >\n          {expanded ? (\n            // 전체 본문 HTML\n            <div dangerouslySetInnerHTML={{ __html: contentHtml }} />\n          ) : (\n            // 잘린 텍스트 + '... 더보기'\n            <p>\n              {truncatedText}\n              {isTextTooLong && (\n                <>\n                  <span>... </span>\n                  <span\n                    className=\"text-blue-600 underline cursor-pointer group-hover:no-underline group-hover:text-blue-800\"\n                    onClick={onMoreClick}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        onMoreClick(e);\n                      }\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    style={{ userSelect: 'none' }}\n                  >\n                    더보기\n                  </span>\n                </>\n              )}\n            </p>\n          )}\n        </div>\n\n        {/* 접기 버튼 (펼친 상태에서만 표시) */}\n        {expanded && needsTruncation && (\n          <div className=\"mt-1\">\n            <button\n              onClick={onCollapseClick}\n              className=\"text-blue-600 underline cursor-pointer select-auto\"\n            >\n              접기\n            </button>\n          </div>\n        )}\n\n        {/* 추천/비추천, 댓글 토글 버튼 */}\n        <div className=\"mt-4 flex justify-between\">\n          <div className=\"flex space-x-2\">\n            <button onClick={() => alert('추천!')}>👍 추천</button>\n            <button\n              onClick={() => alert('비추천!')}\n              className=\"bg-red-500 hover:bg-red-600 text-white px-2 rounded\"\n            >\n              👎 비추천\n            </button>\n          </div>\n\n          <button\n            onClick={() => setShowComments((prev) => !prev)}\n            className=\"bg-gray-500 hover:bg-gray-600 text-white px-2 rounded\"\n          >\n            {showComments ? '💬 댓글 닫기' : '💬 댓글 보기'}\n          </button>\n        </div>\n\n        {/* 댓글 영역 애니메이션 높이 조절 */}\n        <div\n          style={{\n            height: animatedHeight,\n            transition: 'height 300ms ease',\n            overflow: 'hidden',\n          }}\n          className=\"mt-4\"\n          aria-expanded={showComments}\n        >\n          {showComments && (\n            <CommentsSection comments={comments} onToggle={handleRepliesToggle} />\n          )}\n        </div>\n\n        {/* 보이지 않는 전체 본문 렌더링 (이미지 포함) - 높이 측정 용도 */}\n        <div\n          ref={fullContentRef}\n          className=\"invisible absolute left-[-9999px] top-0 w-[calc(100%-2rem)] max-w-none\"\n          dangerouslySetInnerHTML={{ __html: contentHtml }}\n          aria-hidden=\"true\"\n        />\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}