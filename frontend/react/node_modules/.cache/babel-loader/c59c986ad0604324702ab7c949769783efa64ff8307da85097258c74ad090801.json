{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumBo/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // KST 시간 데이터를 저장할 상태 변수\n  const [time, setTime] = useState(null);\n\n  // 컴포넌트가 마운트되면 API 요청을 보냄\n  useEffect(() => {\n    axios.get('http://localhost:8080/dumbo-backend/time').then(response => {\n      // 성공적으로 응답을 받으면 time 상태에 설정\n      setTime(response.data.time_kst);\n    }).catch(error => {\n      console.error(\"There was an error fetching the time!\", error);\n    });\n  }, []); // 빈 배열을 넘겨주면 컴포넌트가 처음 마운트될 때만 실행됨\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"KST \\uD604\\uC7AC \\uC2DC\\uAC04\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: time ? time : '시간을 로딩 중입니다...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t5SmOhh13g3g0U8h9STA+7f4x44=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","time","setTime","get","then","response","data","time_kst","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumBo/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  // KST 시간 데이터를 저장할 상태 변수\n  const [time, setTime] = useState(null);\n\n  // 컴포넌트가 마운트되면 API 요청을 보냄\n  useEffect(() => {\n    axios.get('http://localhost:8080/dumbo-backend/time')\n      .then(response => {\n        // 성공적으로 응답을 받으면 time 상태에 설정\n        setTime(response.data.time_kst);\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the time!\", error);\n      });\n  }, []); // 빈 배열을 넘겨주면 컴포넌트가 처음 마운트될 때만 실행됨\n\n  return (\n    <div className=\"App\">\n      <h1>KST 현재 시간</h1>\n      <p>{time ? time : '시간을 로딩 중입니다...'}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAC,0CAA0C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAH,OAAO,CAACG,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAAc,QAAA,EAAIX,IAAI,GAAGA,IAAI,GAAG;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAAChB,EAAA,CAtBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}