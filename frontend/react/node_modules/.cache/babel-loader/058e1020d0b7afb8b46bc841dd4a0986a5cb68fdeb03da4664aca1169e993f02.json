{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  modals: {},\n  // 등록된 모달들\n  modalStack: [],\n  // 모달의 이름만 저장\n  fadeBackground: false // 열린 페이지가 흐린 화면 처리\n};\nconst modalStackSlice = createSlice({\n  name: 'modalStack',\n  initialState,\n  reducers: {\n    // 모달을 사용하려면, 등록해야 함\n    registerModal: (state, action) => {\n      const {\n        name,\n        clear,\n        setShow\n      } = action.payload;\n      if (!state.modals[name]) state.modals[name] = {\n        'modalName': name,\n        'clearModal': clear,\n        'setShow': setShow\n      };\n    },\n    // 모달을 띄워줌\n    showModal: (state, action) => {\n      const modalName = action.payload;\n      if (!state.modals[modalName]) throw new Error(`등록되지 않은 모달 '${modalName}'`);\n\n      // 스택에 해당 모달이 있다면 제거(중복 방지 : 뒤로가기시 같은 모달이 나오는 경우)\n      state.modalStack = state.modalStack.filter(modal => modal.modalName !== modalName);\n\n      // 만약 현재 열린 모달을 제외하고, 이전에 열린 모달(들)이 존재할 경우, z-index 처리와 fade 처리\n      for (let i = 0; i < state.modalStack.length; i++) state.modalStack[i].setShow(false);\n\n      // 스택에 모달 푸시\n      state.modalStack.push(state.modals[modalName]);\n\n      // 뒷배경 블러처리\n      state.fadeBackground = true;\n\n      // 모달 보이게 하기\n      state.modalStack[state.modalStack.length - 1].setShow(true);\n    },\n    // 가장 나중에 뜬 모달을 닫아줌\n    popModal: state => {\n      // 모달이 없는데 닫으려 하는 경우는 처리하지 않기\n      if (state.modalStack.length == 0) return;\n\n      // 맨 위 모달을 pop\n      let topModal = state.modalStack.pop();\n\n      // 맨 위 모달을 안 보이게 하기\n      topModal.setShow(false);\n\n      // 맨 위 모달에 들어있는 정보 초기화시키기\n      topModal.clearModal();\n\n      // 만약 열려 있던 모달이 있다면, 활성화시키기\n      if (state.modalStack.length > 0) state.modalStack[state.modalStack.length - 1].setShow(true);\n      // 만약 열려 있는 모달이 없을 경우, 뒷배경 블러처리 해제\n      else state.fadeBackground = false;\n    }\n  }\n});\nexport const {\n  registerModal,\n  showModal,\n  popModal\n} = modalStackSlice.actions;\nexport default modalStackSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","modals","modalStack","fadeBackground","modalStackSlice","name","reducers","registerModal","state","action","clear","setShow","payload","showModal","modalName","Error","filter","modal","i","length","push","popModal","topModal","pop","clearModal","actions","reducer"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/react/src/redux/modalStackSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = \n{\n    modals : {},     // 등록된 모달들\n    modalStack : [], // 모달의 이름만 저장\n    fadeBackground : false // 열린 페이지가 흐린 화면 처리\n};\n\nconst modalStackSlice = createSlice(\n    {\n        name : 'modalStack',\n        initialState,\n        reducers :\n        {\n            // 모달을 사용하려면, 등록해야 함\n            registerModal : (state, action) =>\n            {\n                const { name, clear, setShow } = action.payload;\n                if (!state.modals[name]) state.modals[name] = { 'modalName' : name, 'clearModal' : clear, 'setShow' : setShow };\n            },\n\n            // 모달을 띄워줌\n            showModal : (state, action) =>\n            {\n                const modalName = action.payload;\n                if (!state.modals[modalName]) throw new Error(`등록되지 않은 모달 '${modalName}'`);\n                \n                // 스택에 해당 모달이 있다면 제거(중복 방지 : 뒤로가기시 같은 모달이 나오는 경우)\n                state.modalStack = state.modalStack.filter( (modal) => modal.modalName !== modalName);\n\n                // 만약 현재 열린 모달을 제외하고, 이전에 열린 모달(들)이 존재할 경우, z-index 처리와 fade 처리\n                for (let i=0; i < state.modalStack.length; i++) state.modalStack[i].setShow(false);\n\n                // 스택에 모달 푸시\n                state.modalStack.push(state.modals[modalName]);\n\n                // 뒷배경 블러처리\n                state.fadeBackground = true;\n\n                // 모달 보이게 하기\n                state.modalStack[state.modalStack.length-1].setShow(true);\n            },\n\n            // 가장 나중에 뜬 모달을 닫아줌\n            popModal : (state) =>\n            {\n                // 모달이 없는데 닫으려 하는 경우는 처리하지 않기\n                if (state.modalStack.length == 0) return;\n\n                // 맨 위 모달을 pop\n                let topModal = state.modalStack.pop();\n\n                // 맨 위 모달을 안 보이게 하기\n                topModal.setShow(false);\n\n                // 맨 위 모달에 들어있는 정보 초기화시키기\n                topModal.clearModal();\n                \n                // 만약 열려 있던 모달이 있다면, 활성화시키기\n                if (state.modalStack.length > 0) state.modalStack[state.modalStack.length-1].setShow(true);\n                // 만약 열려 있는 모달이 없을 경우, 뒷배경 블러처리 해제\n                else state.fadeBackground = false;\n\n            }\n        },\n    }\n);\n\nexport const { registerModal, showModal, popModal } = modalStackSlice.actions;\nexport default modalStackSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAClB;EACIC,MAAM,EAAG,CAAC,CAAC;EAAM;EACjBC,UAAU,EAAG,EAAE;EAAE;EACjBC,cAAc,EAAG,KAAK,CAAC;AAC3B,CAAC;AAED,MAAMC,eAAe,GAAGL,WAAW,CAC/B;EACIM,IAAI,EAAG,YAAY;EACnBL,YAAY;EACZM,QAAQ,EACR;IACI;IACAC,aAAa,EAAGA,CAACC,KAAK,EAAEC,MAAM,KAC9B;MACI,MAAM;QAAEJ,IAAI;QAAEK,KAAK;QAAEC;MAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC/C,IAAI,CAACJ,KAAK,CAACP,MAAM,CAACI,IAAI,CAAC,EAAEG,KAAK,CAACP,MAAM,CAACI,IAAI,CAAC,GAAG;QAAE,WAAW,EAAGA,IAAI;QAAE,YAAY,EAAGK,KAAK;QAAE,SAAS,EAAGC;MAAQ,CAAC;IACnH,CAAC;IAED;IACAE,SAAS,EAAGA,CAACL,KAAK,EAAEC,MAAM,KAC1B;MACI,MAAMK,SAAS,GAAGL,MAAM,CAACG,OAAO;MAChC,IAAI,CAACJ,KAAK,CAACP,MAAM,CAACa,SAAS,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAeD,SAAS,GAAG,CAAC;;MAE1E;MACAN,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACN,UAAU,CAACc,MAAM,CAAGC,KAAK,IAAKA,KAAK,CAACH,SAAS,KAAKA,SAAS,CAAC;;MAErF;MACA,KAAK,IAAII,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACN,UAAU,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAEV,KAAK,CAACN,UAAU,CAACgB,CAAC,CAAC,CAACP,OAAO,CAAC,KAAK,CAAC;;MAElF;MACAH,KAAK,CAACN,UAAU,CAACkB,IAAI,CAACZ,KAAK,CAACP,MAAM,CAACa,SAAS,CAAC,CAAC;;MAE9C;MACAN,KAAK,CAACL,cAAc,GAAG,IAAI;;MAE3B;MACAK,KAAK,CAACN,UAAU,CAACM,KAAK,CAACN,UAAU,CAACiB,MAAM,GAAC,CAAC,CAAC,CAACR,OAAO,CAAC,IAAI,CAAC;IAC7D,CAAC;IAED;IACAU,QAAQ,EAAIb,KAAK,IACjB;MACI;MACA,IAAIA,KAAK,CAACN,UAAU,CAACiB,MAAM,IAAI,CAAC,EAAE;;MAElC;MACA,IAAIG,QAAQ,GAAGd,KAAK,CAACN,UAAU,CAACqB,GAAG,CAAC,CAAC;;MAErC;MACAD,QAAQ,CAACX,OAAO,CAAC,KAAK,CAAC;;MAEvB;MACAW,QAAQ,CAACE,UAAU,CAAC,CAAC;;MAErB;MACA,IAAIhB,KAAK,CAACN,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAEX,KAAK,CAACN,UAAU,CAACM,KAAK,CAACN,UAAU,CAACiB,MAAM,GAAC,CAAC,CAAC,CAACR,OAAO,CAAC,IAAI,CAAC;MAC1F;MAAA,KACKH,KAAK,CAACL,cAAc,GAAG,KAAK;IAErC;EACJ;AACJ,CACJ,CAAC;AAED,OAAO,MAAM;EAAEI,aAAa;EAAEM,SAAS;EAAEQ;AAAS,CAAC,GAAGjB,eAAe,CAACqB,OAAO;AAC7E,eAAerB,eAAe,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}