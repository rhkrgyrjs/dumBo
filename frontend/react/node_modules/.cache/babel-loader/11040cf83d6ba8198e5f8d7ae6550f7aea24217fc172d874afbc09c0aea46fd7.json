{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/components/ScrollTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport ArticleTest from \"../postTest/ArticleTest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 150;\nconst BUFFER = 40;\nconst fakeFetchPost = async index => {\n  // 0.1초 지연을 주어 비동기처럼 보이게 함\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        title: `게시글 ${index}`,\n        previewText: `이것은 게시글 ${index}의 미리보기입니다.`\n      });\n    }, 100);\n  });\n};\nconst ScrollTest = () => {\n  _s();\n  const [posts, setPosts] = useState(new Map());\n  const [visibleIndexes, setVisibleIndexes] = useState({\n    start: 0,\n    stop: 0\n  });\n  const listRef = useRef(null);\n\n  // 렌더 시마다 loadAround가 재정의되지 않도록 useEffect 안에 정의\n  useEffect(() => {\n    const loadAround = async (startIndex, stopIndex) => {\n      const newPosts = new Map(posts);\n      for (let i = startIndex; i <= stopIndex; i++) {\n        if (!newPosts.has(i)) {\n          const post = await fakeFetchPost(i);\n          if (post) {\n            newPosts.set(i, post);\n          }\n        }\n      }\n      const min = Math.max(0, startIndex - BUFFER);\n      const max = stopIndex + BUFFER;\n      for (let key of newPosts.keys()) {\n        if (key < min || key > max) {\n          newPosts.delete(key);\n        }\n      }\n      setPosts(new Map(newPosts));\n    };\n    loadAround(visibleIndexes.start, visibleIndexes.stop);\n  }, [visibleIndexes]); // posts 의존성 제거\n\n  const Row = ({\n    index,\n    style\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(ArticleTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: \"scrollbar-none\",\n    height: 600,\n    itemCount: 10000,\n    itemSize: ITEM_HEIGHT,\n    width: \"100%\",\n    ref: listRef,\n    onItemsRendered: ({\n      visibleStartIndex,\n      visibleStopIndex\n    }) => {\n      setVisibleIndexes({\n        start: visibleStartIndex,\n        stop: visibleStopIndex\n      });\n    },\n    children: Row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollTest, \"xGZX77KQKkiDQGl3A5ZABr6E+Tc=\");\n_c = ScrollTest;\nexport default ScrollTest;\nvar _c;\n$RefreshReg$(_c, \"ScrollTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FixedSizeList","List","ArticleTest","jsxDEV","_jsxDEV","ITEM_HEIGHT","BUFFER","fakeFetchPost","index","Promise","resolve","setTimeout","title","previewText","ScrollTest","_s","posts","setPosts","Map","visibleIndexes","setVisibleIndexes","start","stop","listRef","loadAround","startIndex","stopIndex","newPosts","i","has","post","set","min","Math","max","key","keys","delete","Row","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","height","itemCount","itemSize","width","ref","onItemsRendered","visibleStartIndex","visibleStopIndex","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/ScrollTest.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport ArticleTest from \"../postTest/ArticleTest\";\n\nconst ITEM_HEIGHT = 150;\nconst BUFFER = 40;\n\nconst fakeFetchPost = async (index) => {\n  // 0.1초 지연을 주어 비동기처럼 보이게 함\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        title: `게시글 ${index}`,\n        previewText: `이것은 게시글 ${index}의 미리보기입니다.`,\n      });\n    }, 100);\n  });\n};\n\nconst ScrollTest = () => {\n  const [posts, setPosts] = useState(new Map());\n  const [visibleIndexes, setVisibleIndexes] = useState({ start: 0, stop: 0 });\n  const listRef = useRef(null);\n\n  // 렌더 시마다 loadAround가 재정의되지 않도록 useEffect 안에 정의\n  useEffect(() => {\n    const loadAround = async (startIndex, stopIndex) => {\n      const newPosts = new Map(posts);\n\n      for (let i = startIndex; i <= stopIndex; i++) {\n        if (!newPosts.has(i)) {\n          const post = await fakeFetchPost(i);\n          if (post) {\n            newPosts.set(i, post);\n          }\n        }\n      }\n\n      const min = Math.max(0, startIndex - BUFFER);\n      const max = stopIndex + BUFFER;\n\n      for (let key of newPosts.keys()) {\n        if (key < min || key > max) {\n          newPosts.delete(key);\n        }\n      }\n\n      setPosts(new Map(newPosts));\n    };\n\n    loadAround(visibleIndexes.start, visibleIndexes.stop);\n  }, [visibleIndexes]); // posts 의존성 제거\n\n const Row = ({ index, style }) => {\n  return (\n    <div style={style}>\n      <ArticleTest />\n    </div>\n  );\n};\n\n  return (\n    <List\n    className=\"scrollbar-none\"\n      height={600}\n      itemCount={10000}\n      itemSize={ITEM_HEIGHT}\n      width=\"100%\"\n      ref={listRef}\n      onItemsRendered={({ visibleStartIndex, visibleStopIndex }) => {\n        setVisibleIndexes({ start: visibleStartIndex, stop: visibleStopIndex });\n      }}\n    >\n      {Row}\n    </List>\n  );\n};\n\nexport default ScrollTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}