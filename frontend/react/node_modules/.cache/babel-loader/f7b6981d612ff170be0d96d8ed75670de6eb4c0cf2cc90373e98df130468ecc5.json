{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/components/PostTemp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostTemp = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const onEditorStateChange = state => {\n    setEditorState(state);\n  };\n  const uploadImageCallback = file => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    return fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"업로드된 이미지 URL:\", data.url);\n      return {\n        data: {\n          link: data.url\n        }\n      };\n    }).catch(error => {\n      console.error(\"이미지 업로드 실패:\", error);\n      return Promise.reject(error);\n    });\n  };\n  const handleSubmit = () => {\n    const rawContent = convertToRaw(editorState.getCurrentContent());\n    const html = draftToHtml(rawContent);\n    console.log(\"작성된 HTML:\", html);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test WYSIWYG Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onEditorStateChange: onEditorStateChange,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      toolbar: {\n        image: {\n          uploadCallback: uploadImageCallback,\n          previewImage: true,\n          alt: {\n            present: true,\n            mandatory: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px 20px\",\n        backgroundColor: \"#4F46E5\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\"\n      },\n      onClick: handleSubmit,\n      children: \"\\uAE00 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PostTemp, \"wG9VLOnpYRUB9A7+mcW2q9Lv0c0=\");\n_c = PostTemp;\nexport default TestEditor;\nvar _c;\n$RefreshReg$(_c, \"PostTemp\");","map":{"version":3,"names":["React","useState","Editor","EditorState","convertToRaw","draftToHtml","jsxDEV","_jsxDEV","PostTemp","_s","editorState","setEditorState","createEmpty","onEditorStateChange","state","uploadImageCallback","file","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","url","link","catch","error","Promise","reject","handleSubmit","rawContent","getCurrentContent","html","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","wrapperClassName","editorClassName","toolbar","image","uploadCallback","previewImage","alt","present","mandatory","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","onClick","_c","TestEditor","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/PostTemp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst PostTemp = () => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = (state) => {\n    setEditorState(state);\n  };\n\n  const uploadImageCallback = (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    return fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"업로드된 이미지 URL:\", data.url);\n        return { data: { link: data.url } };\n      })\n      .catch((error) => {\n        console.error(\"이미지 업로드 실패:\", error);\n        return Promise.reject(error);\n      });\n  };\n\n  const handleSubmit = () => {\n    const rawContent = convertToRaw(editorState.getCurrentContent());\n    const html = draftToHtml(rawContent);\n    console.log(\"작성된 HTML:\", html);\n  };\n\n  return (\n    <div style={{ maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h2>Test WYSIWYG Editor</h2>\n      <Editor\n        editorState={editorState}\n        onEditorStateChange={onEditorStateChange}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n        toolbar={{\n          image: {\n            uploadCallback: uploadImageCallback,\n            previewImage: true,\n            alt: { present: true, mandatory: false },\n          },\n        }}\n      />\n      <button\n        style={{\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          backgroundColor: \"#4F46E5\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n        }}\n        onClick={handleSubmit}\n      >\n        글 업로드\n      </button>\n    </div>\n  );\n};\n\nexport default TestEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}