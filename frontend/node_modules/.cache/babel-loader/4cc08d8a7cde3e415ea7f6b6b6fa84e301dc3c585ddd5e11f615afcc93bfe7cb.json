{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/postTest/ArticleTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport PostCard from './PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 320; // PostCard 대략 높이(px), 필요하면 조정하세요.\n\nexport default function ArticleTest() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const ITEMS_PER_LOAD = 20;\n\n  // 임시 데이터 fetch 시뮬레이션 함수 (실제 API 사용시 교체)\n  async function fetchPosts(offset, limit) {\n    // 여기서 실제 API 호출 또는 데이터 생성\n    // 예시: 100개 더미 데이터 생성\n    const total = 100;\n    await new Promise(r => setTimeout(r, 500)); // 네트워크 딜레이 시뮬레이션\n    if (offset >= total) return [];\n    const newPosts = Array.from({\n      length: Math.min(limit, total - offset)\n    }).map((_, i) => ({\n      id: offset + i + 1,\n      nickname: `User${offset + i + 1}`,\n      title: `제목 ${offset + i + 1}`,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      contentHtml: `<p>게시물 내용 ${offset + i + 1}... 긴 글 테스트용</p>`,\n      thumbnailImage: '',\n      comments: []\n    }));\n    return newPosts;\n  }\n\n  // 초기 및 추가 데이터 로드\n  const loadMoreItems = useCallback(async () => {\n    if (loading || !hasMore) return;\n    setLoading(true);\n    const newPosts = await fetchPosts(posts.length, ITEMS_PER_LOAD);\n    setPosts(prev => [...prev, ...newPosts]);\n    if (newPosts.length < ITEMS_PER_LOAD) {\n      setHasMore(false);\n    }\n    setLoading(false);\n  }, [loading, hasMore, posts.length]);\n  useEffect(() => {\n    loadMoreItems();\n  }, []); // 컴포넌트 마운트시 초기 데이터 로드\n\n  // react-window 리스트에서 마지막 아이템 근처에 도달했을 때 추가 로드\n  const handleItemsRendered = ({\n    visibleStopIndex\n  }) => {\n    if (visibleStopIndex >= posts.length - 5) {\n      // 끝 5개 전부터 미리 로드\n      loadMoreItems();\n    }\n  };\n\n  // 리스트 렌더러\n  const Row = ({\n    index,\n    style\n  }) => {\n    const post = posts[index];\n    if (!post) return null; // 데이터가 아직 없으면 빈칸\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      height: window.innerHeight * 0.8,\n      itemCount: posts.length,\n      itemSize: ITEM_HEIGHT,\n      width: '100%',\n      onItemsRendered: handleItemsRendered,\n      children: Row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-2\",\n      children: \"\\uB85C\\uB529\\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), !hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-2\",\n      children: \"\\uB354 \\uC774\\uC0C1 \\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticleTest, \"k2AZf8horR6D6chLW4ht9OZtpS4=\");\n_c = ArticleTest;\nvar _c;\n$RefreshReg$(_c, \"ArticleTest\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FixedSizeList","List","PostCard","jsxDEV","_jsxDEV","ITEM_HEIGHT","ArticleTest","_s","posts","setPosts","hasMore","setHasMore","loading","setLoading","ITEMS_PER_LOAD","fetchPosts","offset","limit","total","Promise","r","setTimeout","newPosts","Array","from","length","Math","min","map","_","i","id","nickname","title","createdAt","Date","toISOString","updatedAt","contentHtml","thumbnailImage","comments","loadMoreItems","prev","handleItemsRendered","visibleStopIndex","Row","index","style","post","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","window","innerHeight","itemCount","itemSize","onItemsRendered","className","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/postTest/ArticleTest.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport PostCard from './PostCard';\n\nconst ITEM_HEIGHT = 320; // PostCard 대략 높이(px), 필요하면 조정하세요.\n\nexport default function ArticleTest() {\n  const [posts, setPosts] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const ITEMS_PER_LOAD = 20;\n\n  // 임시 데이터 fetch 시뮬레이션 함수 (실제 API 사용시 교체)\n  async function fetchPosts(offset, limit) {\n    // 여기서 실제 API 호출 또는 데이터 생성\n    // 예시: 100개 더미 데이터 생성\n    const total = 100; \n    await new Promise((r) => setTimeout(r, 500)); // 네트워크 딜레이 시뮬레이션\n    if (offset >= total) return [];\n\n    const newPosts = Array.from({ length: Math.min(limit, total - offset) }).map(\n      (_, i) => ({\n        id: offset + i + 1,\n        nickname: `User${offset + i + 1}`,\n        title: `제목 ${offset + i + 1}`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        contentHtml: `<p>게시물 내용 ${offset + i + 1}... 긴 글 테스트용</p>`,\n        thumbnailImage: '',\n        comments: [],\n      })\n    );\n    return newPosts;\n  }\n\n  // 초기 및 추가 데이터 로드\n  const loadMoreItems = useCallback(async () => {\n    if (loading || !hasMore) return;\n    setLoading(true);\n    const newPosts = await fetchPosts(posts.length, ITEMS_PER_LOAD);\n    setPosts((prev) => [...prev, ...newPosts]);\n    if (newPosts.length < ITEMS_PER_LOAD) {\n      setHasMore(false);\n    }\n    setLoading(false);\n  }, [loading, hasMore, posts.length]);\n\n  useEffect(() => {\n    loadMoreItems();\n  }, []); // 컴포넌트 마운트시 초기 데이터 로드\n\n  // react-window 리스트에서 마지막 아이템 근처에 도달했을 때 추가 로드\n  const handleItemsRendered = ({ visibleStopIndex }) => {\n    if (visibleStopIndex >= posts.length - 5) { // 끝 5개 전부터 미리 로드\n      loadMoreItems();\n    }\n  };\n\n  // 리스트 렌더러\n  const Row = ({ index, style }) => {\n    const post = posts[index];\n    if (!post) return null; // 데이터가 아직 없으면 빈칸\n\n    return (\n      <div style={style}>\n        <PostCard key={post.id} post={post} />\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ height: '80vh', width: '100%' }}>\n      <List\n        height={window.innerHeight * 0.8}\n        itemCount={posts.length}\n        itemSize={ITEM_HEIGHT}\n        width={'100%'}\n        onItemsRendered={handleItemsRendered}\n      >\n        {Row}\n      </List>\n      {loading && <div className=\"text-center py-2\">로딩중...</div>}\n      {!hasMore && <div className=\"text-center py-2\">더 이상 게시물이 없습니다.</div>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}