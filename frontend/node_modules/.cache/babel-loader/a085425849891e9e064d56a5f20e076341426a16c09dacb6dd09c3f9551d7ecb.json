{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/components/PostTemp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, ContentBlock } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport DOMPurify from \"dompurify\";\nimport PostRequestWithAccessToken from \"../api/axios/requestWithAccessToken\";\nimport { useSelector } from \"react-redux\";\n\n// 이미지 렌더링용 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaComponent({\n  block,\n  contentState\n}) {\n  const entityKey = block.getEntityAt(0);\n  if (!entityKey) return null;\n  const data = contentState.getEntity(entityKey).getData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.src,\n      alt: data.alt || \"\",\n      style: {\n        height: data.height || \"auto\",\n        width: data.width || \"100%\",\n        maxWidth: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n// atomic 블록 감지 시 MediaComponent로 렌더링\n_c = MediaComponent;\nfunction imageBlockRenderer(contentBlock) {\n  if (contentBlock.getType() === \"atomic\") {\n    return {\n      component: MediaComponent,\n      editable: false\n    };\n  }\n  return null;\n}\nconst PostTemp = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [imageFiles, setImageFiles] = useState([]);\n  const token = useSelector(state => state.auth.accessToken);\n  const onEditorStateChange = state => {\n    setEditorState(state);\n  };\n  const uploadImageCallback = file => {\n    const localUrl = URL.createObjectURL(file);\n    setImageFiles(prev => [...prev, {\n      file,\n      localUrl\n    }]);\n    return Promise.resolve({\n      data: {\n        link: localUrl\n      }\n    });\n  };\n  const uploadImageToServer = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n      const res = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) throw new Error(\"이미지 업로드 실패\");\n      const data = await res.json();\n      if (!data.url) throw new Error(\"서버에서 URL을 받지 못함\");\n      return data.url;\n    } catch (error) {\n      console.error(\"uploadImageToServer error:\", error);\n      throw error;\n    }\n  };\n  const allowedImageDomains = [\"http://localhost:5000/uploads\"];\n  function sanitizeHtmlWithImageFilter(dirtyHtml) {\n    DOMPurify.addHook(\"uponSanitizeElement\", node => {\n      if (node.tagName === \"IMG\") {\n        const src = node.getAttribute(\"src\") || \"\";\n        const allowed = allowedImageDomains.some(domain => src.startsWith(domain));\n        if (!allowed) {\n          node.parentNode && node.parentNode.removeChild(node);\n        }\n      }\n    });\n    const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n    DOMPurify.removeAllHooks();\n    return cleanHtml;\n  }\n  const handleSubmit = async () => {\n    try {\n      const contentState = editorState.getCurrentContent();\n      const rawContent = convertToRaw(contentState);\n      const filteredEntityMap = {};\n      for (const key in rawContent.entityMap) {\n        if (key !== null && key !== \"null\" && rawContent.entityMap[key]) {\n          filteredEntityMap[key] = rawContent.entityMap[key];\n        }\n      }\n      for (const key in filteredEntityMap) {\n        const entity = filteredEntityMap[key];\n        if (entity.type === \"IMAGE\") {\n          const localSrc = entity.data.src;\n          const imgObj = imageFiles.find(img => img.localUrl === localSrc);\n          if (imgObj) {\n            const serverUrl = await uploadImageToServer(imgObj.file);\n            filteredEntityMap[key] = {\n              ...entity,\n              data: {\n                ...entity.data,\n                src: serverUrl\n              }\n            };\n          }\n        }\n      }\n      const fixedRawContent = {\n        ...rawContent,\n        entityMap: filteredEntityMap\n      };\n      const htmlContent = draftToHtml(fixedRawContent);\n      const cleanHtml = sanitizeHtmlWithImageFilter(htmlContent);\n      const titleValue = document.getElementById(\"draft-title\").value;\n      const res = await PostRequestWithAccessToken(token, \"/post\", {\n        title: titleValue,\n        content: cleanHtml\n      });\n      alert(\"글 작성이 완료되었습니다!\");\n      setEditorState(EditorState.createEmpty());\n      setImageFiles([]);\n    } catch (error) {\n      console.error(\"글 작성 실패:\", error);\n      alert(\"글 작성 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"draft-title\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      className: \"mb-3 p-2 border border-gray-300 rounded focus:border-indigo-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border rounded-md mb-4 h-[590px] flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        onEditorStateChange: onEditorStateChange,\n        customBlockRenderFunc: imageBlockRenderer,\n        wrapperClassName: \"flex flex-col h-full\",\n        toolbarClassName: \"!sticky top-0 z-10 bg-white mb-2\",\n        editorClassName: \"flex-1 overflow-y-auto px-2\",\n        toolbar: {\n          options: [\"inline\", \"colorPicker\", \"blockType\", \"list\", \"textAlign\", \"emoji\", \"image\", \"remove\", \"history\", \"fontFamily\", \"fontSize\"],\n          inline: {\n            options: [\"bold\", \"italic\", \"underline\", \"strikethrough\"]\n          },\n          blockType: {\n            options: [\"Normal\", \"Blockquote\", \"Code\"]\n          },\n          fontSize: {\n            options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36]\n          },\n          fontFamily: {\n            options: [\"Arial\", \"Georgia\", \"Tahoma\", \"Times New Roman\", \"Verdana\"]\n          },\n          list: {\n            options: [\"unordered\", \"ordered\"]\n          },\n          textAlign: {\n            options: [\"left\", \"center\", \"right\", \"justify\"]\n          },\n          colorPicker: {},\n          emoji: {},\n          image: {\n            uploadCallback: uploadImageCallback,\n            previewImage: true,\n            alt: {\n              present: true,\n              mandatory: false\n            },\n            title: \"이미지 업로드\",\n            uploadEnabled: true,\n            urlEnabled: false\n          },\n          remove: {},\n          history: {\n            options: [\"undo\", \"redo\"]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-auto flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-2 py-2 bg-indigo-500 text-xl rounded-full cursor-pointer hover:bg-indigo-700\",\n        onClick: handleSubmit,\n        children: \"\\uD83E\\uDEB6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(PostTemp, \"v1oXy2VCIhnuNRoi6hfcZg0ceP4=\", false, function () {\n  return [useSelector];\n});\n_c2 = PostTemp;\nexport default PostTemp;\nvar _c, _c2;\n$RefreshReg$(_c, \"MediaComponent\");\n$RefreshReg$(_c2, \"PostTemp\");","map":{"version":3,"names":["React","useState","Editor","EditorState","convertToRaw","ContentBlock","draftToHtml","DOMPurify","PostRequestWithAccessToken","useSelector","jsxDEV","_jsxDEV","MediaComponent","block","contentState","entityKey","getEntityAt","data","getEntity","getData","children","src","alt","style","height","width","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","imageBlockRenderer","contentBlock","getType","component","editable","PostTemp","_s","editorState","setEditorState","createEmpty","imageFiles","setImageFiles","token","state","auth","accessToken","onEditorStateChange","uploadImageCallback","file","localUrl","URL","createObjectURL","prev","Promise","resolve","link","uploadImageToServer","formData","FormData","append","res","fetch","method","body","ok","Error","json","url","error","console","allowedImageDomains","sanitizeHtmlWithImageFilter","dirtyHtml","addHook","node","tagName","getAttribute","allowed","some","domain","startsWith","parentNode","removeChild","cleanHtml","sanitize","removeAllHooks","handleSubmit","getCurrentContent","rawContent","filteredEntityMap","key","entityMap","entity","type","localSrc","imgObj","find","img","serverUrl","fixedRawContent","htmlContent","titleValue","document","getElementById","value","title","content","alert","className","id","placeholder","customBlockRenderFunc","wrapperClassName","toolbarClassName","editorClassName","toolbar","options","inline","blockType","fontSize","fontFamily","list","textAlign","colorPicker","emoji","image","uploadCallback","previewImage","present","mandatory","uploadEnabled","urlEnabled","remove","history","onClick","_c2","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/PostTemp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, ContentBlock } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport DOMPurify from \"dompurify\";\n\nimport PostRequestWithAccessToken from \"../api/axios/requestWithAccessToken\";\nimport { useSelector } from \"react-redux\";\n\n// 이미지 렌더링용 컴포넌트\nfunction MediaComponent({ block, contentState }) {\n  const entityKey = block.getEntityAt(0);\n  if (!entityKey) return null;\n\n  const data = contentState.getEntity(entityKey).getData();\n\n  return (\n    <div>\n      <img\n        src={data.src}\n        alt={data.alt || \"\"}\n        style={{\n          height: data.height || \"auto\",\n          width: data.width || \"100%\",\n          maxWidth: \"100%\",\n        }}\n      />\n    </div>\n  );\n}\n\n// atomic 블록 감지 시 MediaComponent로 렌더링\nfunction imageBlockRenderer(contentBlock) {\n  if (contentBlock.getType() === \"atomic\") {\n    return {\n      component: MediaComponent,\n      editable: false,\n    };\n  }\n  return null;\n}\n\nconst PostTemp = () => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [imageFiles, setImageFiles] = useState([]);\n  const token = useSelector((state) => state.auth.accessToken);\n\n  const onEditorStateChange = (state) => {\n    setEditorState(state);\n  };\n\n  const uploadImageCallback = (file) => {\n    const localUrl = URL.createObjectURL(file);\n    setImageFiles((prev) => [...prev, { file, localUrl }]);\n\n    return Promise.resolve({ data: { link: localUrl } });\n  };\n\n  const uploadImageToServer = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n\n      const res = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!res.ok) throw new Error(\"이미지 업로드 실패\");\n\n      const data = await res.json();\n      if (!data.url) throw new Error(\"서버에서 URL을 받지 못함\");\n\n      return data.url;\n    } catch (error) {\n      console.error(\"uploadImageToServer error:\", error);\n      throw error;\n    }\n  };\n\n  const allowedImageDomains = [\"http://localhost:5000/uploads\"];\n  function sanitizeHtmlWithImageFilter(dirtyHtml) {\n    DOMPurify.addHook(\"uponSanitizeElement\", (node) => {\n      if (node.tagName === \"IMG\") {\n        const src = node.getAttribute(\"src\") || \"\";\n        const allowed = allowedImageDomains.some((domain) => src.startsWith(domain));\n        if (!allowed) {\n          node.parentNode && node.parentNode.removeChild(node);\n        }\n      }\n    });\n\n    const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n    DOMPurify.removeAllHooks();\n    return cleanHtml;\n  }\n\n  const handleSubmit = async () => {\n    try {\n      const contentState = editorState.getCurrentContent();\n      const rawContent = convertToRaw(contentState);\n\n      const filteredEntityMap = {};\n      for (const key in rawContent.entityMap) {\n        if (key !== null && key !== \"null\" && rawContent.entityMap[key]) {\n          filteredEntityMap[key] = rawContent.entityMap[key];\n        }\n      }\n\n      for (const key in filteredEntityMap) {\n        const entity = filteredEntityMap[key];\n        if (entity.type === \"IMAGE\") {\n          const localSrc = entity.data.src;\n          const imgObj = imageFiles.find((img) => img.localUrl === localSrc);\n          if (imgObj) {\n            const serverUrl = await uploadImageToServer(imgObj.file);\n            filteredEntityMap[key] = {\n              ...entity,\n              data: {\n                ...entity.data,\n                src: serverUrl,\n              },\n            };\n          }\n        }\n      }\n\n      const fixedRawContent = {\n        ...rawContent,\n        entityMap: filteredEntityMap,\n      };\n\n      const htmlContent = draftToHtml(fixedRawContent);\n      const cleanHtml = sanitizeHtmlWithImageFilter(htmlContent);\n      const titleValue = document.getElementById(\"draft-title\").value;\n\n      const res = await PostRequestWithAccessToken(token, \"/post\", {\n        title: titleValue,\n        content: cleanHtml,\n      });\n\n      alert(\"글 작성이 완료되었습니다!\");\n      setEditorState(EditorState.createEmpty());\n      setImageFiles([]);\n    } catch (error) {\n      console.error(\"글 작성 실패:\", error);\n      alert(\"글 작성 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <input\n        id=\"draft-title\"\n        placeholder=\"제목을 입력하세요\"\n        className=\"mb-3 p-2 border border-gray-300 rounded focus:border-indigo-300\"\n      />\n\n      <div className=\"border rounded-md mb-4 h-[590px] flex flex-col\">\n        <Editor\n          editorState={editorState}\n          onEditorStateChange={onEditorStateChange}\n          customBlockRenderFunc={imageBlockRenderer}\n          wrapperClassName=\"flex flex-col h-full\"\n          toolbarClassName=\"!sticky top-0 z-10 bg-white mb-2\"\n          editorClassName=\"flex-1 overflow-y-auto px-2\"\n          toolbar={{\n            options: [\n              \"inline\",\n              \"colorPicker\",\n              \"blockType\",\n              \"list\",\n              \"textAlign\",\n              \"emoji\",\n              \"image\",\n              \"remove\",\n              \"history\",\n              \"fontFamily\",\n              \"fontSize\",\n            ],\n            inline: {\n              options: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n            },\n            blockType: { options: [\"Normal\", \"Blockquote\", \"Code\"] },\n            fontSize: { options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36] },\n            fontFamily: {\n              options: [\"Arial\", \"Georgia\", \"Tahoma\", \"Times New Roman\", \"Verdana\"],\n            },\n            list: { options: [\"unordered\", \"ordered\"] },\n            textAlign: { options: [\"left\", \"center\", \"right\", \"justify\"] },\n            colorPicker: {},\n            emoji: {},\n            image: {\n              uploadCallback: uploadImageCallback,\n              previewImage: true,\n              alt: { present: true, mandatory: false },\n              title: \"이미지 업로드\",\n              uploadEnabled: true,\n              urlEnabled: false,\n            },\n            remove: {},\n            history: { options: [\"undo\", \"redo\"] },\n          }}\n        />\n      </div>\n\n      <div className=\"mt-auto flex justify-center\">\n        <button\n          className=\"px-2 py-2 bg-indigo-500 text-xl rounded-full cursor-pointer hover:bg-indigo-700\"\n          onClick={handleSubmit}\n        >\n          🪶\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PostTemp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}