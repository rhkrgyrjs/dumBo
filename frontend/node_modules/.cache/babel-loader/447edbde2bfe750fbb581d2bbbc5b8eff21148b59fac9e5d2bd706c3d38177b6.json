{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/postTest/ArticleTest.js\",\n  _s = $RefreshSig$();\n// ArticleTest.js\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport PostCard from './PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 20;\nexport default function ArticleTest() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n\n  // 커서 상태\n  const createdAtCursorRef = useRef(null);\n  const postIdCursorRef = useRef(null);\n  const loadMoreRef = useRef();\n  const fetchPosts = useCallback(async (cursorCreatedAt = null, cursorPostId = null) => {\n    if (isLoading || !hasMore) return;\n    setIsLoading(true);\n    const params = new URLSearchParams();\n    params.append('limit', PAGE_SIZE);\n    if (cursorCreatedAt) params.append('createdAtCursor', cursorCreatedAt);\n    if (cursorPostId) params.append('postIdCursor', cursorPostId);\n    try {\n      const res = await fetch(`http://localhost:8080/dumbo-backend/posts?${params.toString()}`);\n      if (!res.ok) throw new Error('네트워크 오류');\n      const json = await res.json();\n\n      // API의 data 배열을 그대로 붙이기\n      setPosts(prev => [...prev, ...json.data]);\n\n      // 커서 갱신\n      if (json.nextCreatedAt && json.nextPostId) {\n        createdAtCursorRef.current = json.nextCreatedAt;\n        postIdCursorRef.current = json.nextPostId;\n        setHasMore(json.hasMore);\n      } else {\n        setHasMore(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    setIsLoading(false);\n  }, [isLoading, hasMore]);\n\n  // 초기 로드\n  useEffect(() => {\n    fetchPosts();\n  }, [fetchPosts]);\n\n  // 무한 스크롤 감지\n  useEffect(() => {\n    if (!loadMoreRef.current) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && !isLoading && hasMore) {\n        fetchPosts(createdAtCursorRef.current, postIdCursorRef.current);\n      }\n    }, {\n      rootMargin: '200px'\n    });\n    observer.observe(loadMoreRef.current);\n    return () => {\n      if (loadMoreRef.current) observer.unobserve(loadMoreRef.current);\n    };\n  }, [isLoading, hasMore, fetchPosts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 px-4\",\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.post_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-4\",\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loadMoreRef,\n      style: {\n        height: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), !hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-4 text-gray-500\",\n      children: \"\\uB354 \\uC774\\uC0C1 \\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticleTest, \"Vo5EvjMfPj28fVWQ4X6v9AR2OLU=\");\n_c = ArticleTest;\nvar _c;\n$RefreshReg$(_c, \"ArticleTest\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","PostCard","jsxDEV","_jsxDEV","PAGE_SIZE","ArticleTest","_s","posts","setPosts","isLoading","setIsLoading","hasMore","setHasMore","createdAtCursorRef","postIdCursorRef","loadMoreRef","fetchPosts","cursorCreatedAt","cursorPostId","params","URLSearchParams","append","res","fetch","toString","ok","Error","json","prev","data","nextCreatedAt","nextPostId","current","e","console","error","observer","IntersectionObserver","entry","isIntersecting","rootMargin","observe","unobserve","className","children","map","post","post_id","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","height","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/postTest/ArticleTest.js"],"sourcesContent":["// ArticleTest.js\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport PostCard from './PostCard';\n\nconst PAGE_SIZE = 20;\n\nexport default function ArticleTest() {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n\n  // 커서 상태\n  const createdAtCursorRef = useRef(null);\n  const postIdCursorRef = useRef(null);\n\n  const loadMoreRef = useRef();\n\n  const fetchPosts = useCallback(async (cursorCreatedAt = null, cursorPostId = null) => {\n    if (isLoading || !hasMore) return;\n\n    setIsLoading(true);\n\n    const params = new URLSearchParams();\n    params.append('limit', PAGE_SIZE);\n    if (cursorCreatedAt) params.append('createdAtCursor', cursorCreatedAt);\n    if (cursorPostId) params.append('postIdCursor', cursorPostId);\n\n    try {\n      const res = await fetch(`http://localhost:8080/dumbo-backend/posts?${params.toString()}`);\n      if (!res.ok) throw new Error('네트워크 오류');\n\n      const json = await res.json();\n\n      // API의 data 배열을 그대로 붙이기\n      setPosts((prev) => [...prev, ...json.data]);\n\n      // 커서 갱신\n      if (json.nextCreatedAt && json.nextPostId) {\n        createdAtCursorRef.current = json.nextCreatedAt;\n        postIdCursorRef.current = json.nextPostId;\n        setHasMore(json.hasMore);\n      } else {\n        setHasMore(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    setIsLoading(false);\n  }, [isLoading, hasMore]);\n\n  // 초기 로드\n  useEffect(() => {\n    fetchPosts();\n  }, [fetchPosts]);\n\n  // 무한 스크롤 감지\n  useEffect(() => {\n    if (!loadMoreRef.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !isLoading && hasMore) {\n          fetchPosts(createdAtCursorRef.current, postIdCursorRef.current);\n        }\n      },\n      { rootMargin: '200px' }\n    );\n\n    observer.observe(loadMoreRef.current);\n\n    return () => {\n      if (loadMoreRef.current) observer.unobserve(loadMoreRef.current);\n    };\n  }, [isLoading, hasMore, fetchPosts]);\n\n  return (\n    <div className=\"max-w-xl mx-auto mt-10 px-4\">\n      {posts.map((post) => (\n        <PostCard key={post.post_id} post={post} />\n      ))}\n      {isLoading && <div className=\"text-center py-4\">로딩 중...</div>}\n      <div ref={loadMoreRef} style={{ height: 1 }} />\n      {!hasMore && <div className=\"text-center py-4 text-gray-500\">더 이상 게시글이 없습니다.</div>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}