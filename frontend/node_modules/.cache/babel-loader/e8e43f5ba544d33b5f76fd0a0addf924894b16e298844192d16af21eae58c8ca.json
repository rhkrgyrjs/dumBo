{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/components/PostTemp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport DOMPurify from \"dompurify\";\nimport PostRequestWithAccessToken from \"../api/axios/requestWithAccessToken\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostTemp = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [imageFiles, setImageFiles] = useState([]);\n  const token = useSelector(state => state.auth.accessToken);\n  const onEditorStateChange = state => {\n    setEditorState(state);\n  };\n\n  // 이미지 에디터 내 업로드 시 로컬 URL 생성 및 저장\n  const uploadImageCallback = file => {\n    const localUrl = URL.createObjectURL(file);\n    setImageFiles(prev => [...prev, {\n      file,\n      localUrl\n    }]);\n    // 에디터에 임시로 로컬 URL 반환 (서버 업로드는 제출 시)\n    return Promise.resolve({\n      data: {\n        link: localUrl\n      }\n    });\n  };\n\n  // 서버에 이미지 파일 업로드 함수\n  const uploadImageToServer = async file => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const res = await fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!res.ok) throw new Error(\"이미지 업로드 실패\");\n    const data = await res.json();\n    if (!data.url) throw new Error(\"서버에서 URL을 받지 못함\");\n    return data.url;\n  };\n\n  // 허용된 이미지 도메인만 허용하는 sanitize 함수\n  const allowedImageDomains = [\"http://localhost:5000/uploads\"];\n  function sanitizeHtmlWithImageFilter(dirtyHtml) {\n    DOMPurify.addHook(\"uponSanitizeElement\", node => {\n      if (node.tagName === \"IMG\") {\n        const src = node.getAttribute(\"src\") || \"\";\n        const allowed = allowedImageDomains.some(domain => src.startsWith(domain));\n        if (!allowed) {\n          node.parentNode && node.parentNode.removeChild(node);\n        }\n      }\n    });\n    const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n    DOMPurify.removeAllHooks();\n    return cleanHtml;\n  }\n  const handleSubmit = async () => {\n    try {\n      const contentState = editorState.getCurrentContent();\n      const rawContent = convertToRaw(contentState);\n\n      // 로컬 이미지 URL → 서버 URL 매핑 저장용\n      const urlMap = {};\n\n      // 이미지 엔티티만 필터링해서 업로드 (중복 업로드 방지)\n      const uploadPromises = Object.entries(rawContent.entityMap).filter(([, entity]) => entity.type === \"IMAGE\").map(async ([key, entity]) => {\n        const localSrc = entity.data.src;\n        const imgObj = imageFiles.find(img => img.localUrl === localSrc);\n        if (imgObj && !urlMap[localSrc]) {\n          const serverUrl = await uploadImageToServer(imgObj.file);\n          urlMap[localSrc] = serverUrl;\n        }\n      });\n      await Promise.all(uploadPromises);\n\n      // rawContent → HTML 변환\n      let htmlContent = draftToHtml(rawContent);\n\n      // HTML 내 로컬 URL을 서버 URL로 치환 (정규식으로 안전하게)\n      Object.entries(urlMap).forEach(([localUrl, serverUrl]) => {\n        // 로컬 URL 문자열을 RegExp용으로 이스케이프 처리\n        const escapedLocalUrl = localUrl.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        const regex = new RegExp(escapedLocalUrl, \"g\");\n        htmlContent = htmlContent.replace(regex, serverUrl);\n      });\n\n      // XSS 방지 sanitize\n      const cleanHtml = sanitizeHtmlWithImageFilter(htmlContent);\n      const title = document.getElementById(\"draft-title\").value;\n      const res = await PostRequestWithAccessToken(token, \"/post\", {\n        title,\n        content: cleanHtml\n      });\n      alert(\"글 작성이 완료되었습니다!\");\n      setEditorState(EditorState.createEmpty());\n      setImageFiles([]);\n      document.getElementById(\"draft-title\").value = \"\";\n      console.log(\"작성 완료:\", res.data);\n    } catch (error) {\n      console.error(\"글 작성 실패:\", error);\n      alert(\"글 작성 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"draft-title\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      className: \"mb-3 p-2 border border-gray-300 rounded focus:border-indigo-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border rounded-md mb-4 h-[590px] flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        onEditorStateChange: onEditorStateChange,\n        wrapperClassName: \"flex flex-col h-full\",\n        toolbarClassName: \"!sticky top-0 z-10 bg-white mb-2\",\n        editorClassName: \"flex-1 overflow-y-auto px-2\",\n        toolbar: {\n          options: [\"inline\", \"colorPicker\", \"blockType\", \"list\", \"textAlign\", \"emoji\", \"image\", \"remove\", \"history\", \"fontFamily\", \"fontSize\"],\n          inline: {\n            options: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n            bold: {\n              title: \"굵게\"\n            },\n            italic: {\n              title: \"기울이기\"\n            },\n            underline: {\n              title: \"밑줄\"\n            },\n            strikethrough: {\n              title: \"취소선\"\n            }\n          },\n          blockType: {\n            options: [\"Normal\", \"Blockquote\", \"Code\"]\n          },\n          fontSize: {\n            options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36, 48, 60, 72, 96]\n          },\n          fontFamily: {\n            options: [\"Arial\", \"Georgia\", \"Impact\", \"Tahoma\", \"Times New Roman\", \"Verdana\"]\n          },\n          list: {\n            options: [\"unordered\", \"ordered\"]\n          },\n          textAlign: {\n            options: [\"left\", \"center\", \"right\", \"justify\"]\n          },\n          colorPicker: {},\n          link: {\n            options: [\"link\", \"unlink\"]\n          },\n          emoji: {},\n          image: {\n            uploadCallback: uploadImageCallback,\n            previewImage: true,\n            alt: {\n              present: true,\n              mandatory: false\n            },\n            title: \"이미지 업로드\",\n            uploadEnabled: true,\n            urlEnabled: false\n          },\n          remove: {},\n          history: {\n            options: [\"undo\", \"redo\"]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-auto flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" px-2 py-2 bg-indigo-500 text-xl rounded-full cursor-pointer hover:bg-indigo-700 \",\n        onClick: handleSubmit,\n        type: \"button\",\n        children: \"\\uD83E\\uDEB6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(PostTemp, \"v1oXy2VCIhnuNRoi6hfcZg0ceP4=\", false, function () {\n  return [useSelector];\n});\n_c = PostTemp;\nexport default PostTemp;\nvar _c;\n$RefreshReg$(_c, \"PostTemp\");","map":{"version":3,"names":["React","useState","Editor","EditorState","convertToRaw","draftToHtml","DOMPurify","PostRequestWithAccessToken","useSelector","jsxDEV","_jsxDEV","PostTemp","_s","editorState","setEditorState","createEmpty","imageFiles","setImageFiles","token","state","auth","accessToken","onEditorStateChange","uploadImageCallback","file","localUrl","URL","createObjectURL","prev","Promise","resolve","data","link","uploadImageToServer","formData","FormData","append","res","fetch","method","body","ok","Error","json","url","allowedImageDomains","sanitizeHtmlWithImageFilter","dirtyHtml","addHook","node","tagName","src","getAttribute","allowed","some","domain","startsWith","parentNode","removeChild","cleanHtml","sanitize","removeAllHooks","handleSubmit","contentState","getCurrentContent","rawContent","urlMap","uploadPromises","Object","entries","entityMap","filter","entity","type","map","key","localSrc","imgObj","find","img","serverUrl","all","htmlContent","forEach","escapedLocalUrl","replace","regex","RegExp","title","document","getElementById","value","content","alert","console","log","error","className","children","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","wrapperClassName","toolbarClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","blockType","fontSize","fontFamily","list","textAlign","colorPicker","emoji","image","uploadCallback","previewImage","alt","present","mandatory","uploadEnabled","urlEnabled","remove","history","onClick","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/PostTemp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport DOMPurify from \"dompurify\";\n\nimport PostRequestWithAccessToken from \"../api/axios/requestWithAccessToken\";\nimport { useSelector } from \"react-redux\";\n\nconst PostTemp = () => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const [imageFiles, setImageFiles] = useState([]);\n  const token = useSelector((state) => state.auth.accessToken);\n\n  const onEditorStateChange = (state) => {\n    setEditorState(state);\n  };\n\n  // 이미지 에디터 내 업로드 시 로컬 URL 생성 및 저장\n  const uploadImageCallback = (file) => {\n    const localUrl = URL.createObjectURL(file);\n    setImageFiles((prev) => [...prev, { file, localUrl }]);\n    // 에디터에 임시로 로컬 URL 반환 (서버 업로드는 제출 시)\n    return Promise.resolve({ data: { link: localUrl } });\n  };\n\n  // 서버에 이미지 파일 업로드 함수\n  const uploadImageToServer = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    const res = await fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!res.ok) throw new Error(\"이미지 업로드 실패\");\n\n    const data = await res.json();\n    if (!data.url) throw new Error(\"서버에서 URL을 받지 못함\");\n\n    return data.url;\n  };\n\n  // 허용된 이미지 도메인만 허용하는 sanitize 함수\n  const allowedImageDomains = [\"http://localhost:5000/uploads\"];\n\n  function sanitizeHtmlWithImageFilter(dirtyHtml) {\n    DOMPurify.addHook(\"uponSanitizeElement\", (node) => {\n      if (node.tagName === \"IMG\") {\n        const src = node.getAttribute(\"src\") || \"\";\n        const allowed = allowedImageDomains.some((domain) =>\n          src.startsWith(domain)\n        );\n        if (!allowed) {\n          node.parentNode && node.parentNode.removeChild(node);\n        }\n      }\n    });\n\n    const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n    DOMPurify.removeAllHooks();\n\n    return cleanHtml;\n  }\n\n  const handleSubmit = async () => {\n    try {\n      const contentState = editorState.getCurrentContent();\n      const rawContent = convertToRaw(contentState);\n\n      // 로컬 이미지 URL → 서버 URL 매핑 저장용\n      const urlMap = {};\n\n      // 이미지 엔티티만 필터링해서 업로드 (중복 업로드 방지)\n      const uploadPromises = Object.entries(rawContent.entityMap)\n        .filter(([, entity]) => entity.type === \"IMAGE\")\n        .map(async ([key, entity]) => {\n          const localSrc = entity.data.src;\n          const imgObj = imageFiles.find((img) => img.localUrl === localSrc);\n          if (imgObj && !urlMap[localSrc]) {\n            const serverUrl = await uploadImageToServer(imgObj.file);\n            urlMap[localSrc] = serverUrl;\n          }\n        });\n\n      await Promise.all(uploadPromises);\n\n      // rawContent → HTML 변환\n      let htmlContent = draftToHtml(rawContent);\n\n      // HTML 내 로컬 URL을 서버 URL로 치환 (정규식으로 안전하게)\n      Object.entries(urlMap).forEach(([localUrl, serverUrl]) => {\n        // 로컬 URL 문자열을 RegExp용으로 이스케이프 처리\n        const escapedLocalUrl = localUrl.replace(\n          /[-\\/\\\\^$*+?.()|[\\]{}]/g,\n          \"\\\\$&\"\n        );\n        const regex = new RegExp(escapedLocalUrl, \"g\");\n        htmlContent = htmlContent.replace(regex, serverUrl);\n      });\n\n      // XSS 방지 sanitize\n      const cleanHtml = sanitizeHtmlWithImageFilter(htmlContent);\n\n      const title = document.getElementById(\"draft-title\").value;\n\n      const res = await PostRequestWithAccessToken(token, \"/post\", {\n        title,\n        content: cleanHtml,\n      });\n\n      alert(\"글 작성이 완료되었습니다!\");\n      setEditorState(EditorState.createEmpty());\n      setImageFiles([]);\n      document.getElementById(\"draft-title\").value = \"\";\n\n      console.log(\"작성 완료:\", res.data);\n    } catch (error) {\n      console.error(\"글 작성 실패:\", error);\n      alert(\"글 작성 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      {/* 제목 입력창 */}\n      <input\n        id=\"draft-title\"\n        placeholder=\"제목을 입력하세요\"\n        className=\"mb-3 p-2 border border-gray-300 rounded focus:border-indigo-300\"\n      />\n\n      {/* 에디터 */}\n      <div className=\"border rounded-md mb-4 h-[590px] flex flex-col\">\n        <Editor\n          editorState={editorState}\n          onEditorStateChange={onEditorStateChange}\n          wrapperClassName=\"flex flex-col h-full\"\n          toolbarClassName=\"!sticky top-0 z-10 bg-white mb-2\"\n          editorClassName=\"flex-1 overflow-y-auto px-2\"\n          toolbar={{\n            options: [\n              \"inline\",\n              \"colorPicker\",\n              \"blockType\",\n              \"list\",\n              \"textAlign\",\n              \"emoji\",\n              \"image\",\n              \"remove\",\n              \"history\",\n              \"fontFamily\",\n              \"fontSize\",\n            ],\n            inline: {\n              options: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n              bold: { title: \"굵게\" },\n              italic: { title: \"기울이기\" },\n              underline: { title: \"밑줄\" },\n              strikethrough: { title: \"취소선\" },\n            },\n            blockType: {\n              options: [\"Normal\", \"Blockquote\", \"Code\"],\n            },\n            fontSize: {\n              options: [\n                8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36, 48, 60, 72, 96,\n              ],\n            },\n            fontFamily: {\n              options: [\n                \"Arial\",\n                \"Georgia\",\n                \"Impact\",\n                \"Tahoma\",\n                \"Times New Roman\",\n                \"Verdana\",\n              ],\n            },\n            list: {\n              options: [\"unordered\", \"ordered\"],\n            },\n            textAlign: {\n              options: [\"left\", \"center\", \"right\", \"justify\"],\n            },\n            colorPicker: {},\n            link: {\n              options: [\"link\", \"unlink\"],\n            },\n            emoji: {},\n            image: {\n              uploadCallback: uploadImageCallback,\n              previewImage: true,\n              alt: { present: true, mandatory: false },\n              title: \"이미지 업로드\",\n              uploadEnabled: true,\n              urlEnabled: false,\n            },\n            remove: {},\n            history: {\n              options: [\"undo\", \"redo\"],\n            },\n          }}\n        />\n      </div>\n\n      {/* 제출 버튼 */}\n      <div className=\"mt-auto flex justify-center\">\n        <button\n          className=\"\n            px-2\n            py-2\n            bg-indigo-500\n            text-xl\n            rounded-full\n            cursor-pointer\n            hover:bg-indigo-700\n          \"\n          onClick={handleSubmit}\n          type=\"button\"\n        >\n          🪶\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PostTemp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}