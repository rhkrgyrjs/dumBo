{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/dumbo/frontend/src/components/PostTemp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostTemp = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  // 에디터 상태 변경 핸들러\n  const onEditorStateChange = state => {\n    setEditorState(state);\n  };\n\n  // 이미지 업로드 콜백: 서버에 이미지 업로드 후 { data: { link: 이미지 URL } } 반환 필수\n  const uploadImageCallback = file => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    return fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => {\n      if (!data.url) {\n        return Promise.reject(\"No url returned from server\");\n      }\n      return {\n        data: {\n          link: data.url\n        }\n      };\n    }).catch(error => {\n      console.error(\"이미지 업로드 실패:\", error);\n      return Promise.reject(error);\n    });\n  };\n\n  // 글쓰기(전송) 버튼 클릭 시 처리 함수\n  const handleSubmit = () => {\n    const contentState = editorState.getCurrentContent();\n    const rawContent = convertToRaw(contentState);\n    const htmlContent = draftToHtml(rawContent);\n    console.log(\"entityMap:\", rawContent.entityMap);\n    console.log(\"작성된 HTML:\", htmlContent);\n\n    // 여기서 서버에 htmlContent 전송하는 로직 추가 가능\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onEditorStateChange: onEditorStateChange,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      toolbar: {\n        image: {\n          uploadCallback: uploadImageCallback,\n          previewImage: true,\n          alt: {\n            present: true,\n            mandatory: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: 20,\n        padding: \"10px 20px\",\n        backgroundColor: \"#4F46E5\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: 5,\n        cursor: \"pointer\"\n      },\n      onClick: handleSubmit,\n      children: \"\\uAE00 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PostTemp, \"wG9VLOnpYRUB9A7+mcW2q9Lv0c0=\");\n_c = PostTemp;\nexport default PostTemp;\nvar _c;\n$RefreshReg$(_c, \"PostTemp\");","map":{"version":3,"names":["React","useState","Editor","EditorState","convertToRaw","draftToHtml","jsxDEV","_jsxDEV","PostTemp","_s","editorState","setEditorState","createEmpty","onEditorStateChange","state","uploadImageCallback","file","formData","FormData","append","fetch","method","body","then","res","json","data","url","Promise","reject","link","catch","error","console","handleSubmit","contentState","getCurrentContent","rawContent","htmlContent","log","entityMap","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","wrapperClassName","editorClassName","toolbar","image","uploadCallback","previewImage","alt","present","mandatory","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","onClick","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/PostTemp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst PostTemp = () => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  // 에디터 상태 변경 핸들러\n  const onEditorStateChange = (state) => {\n    setEditorState(state);\n  };\n\n  // 이미지 업로드 콜백: 서버에 이미지 업로드 후 { data: { link: 이미지 URL } } 반환 필수\n  const uploadImageCallback = (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    return fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.url) {\n          return Promise.reject(\"No url returned from server\");\n        }\n        return { data: { link: data.url } };\n      })\n      .catch((error) => {\n        console.error(\"이미지 업로드 실패:\", error);\n        return Promise.reject(error);\n      });\n  };\n\n  // 글쓰기(전송) 버튼 클릭 시 처리 함수\n  const handleSubmit = () => {\n    const contentState = editorState.getCurrentContent();\n    const rawContent = convertToRaw(contentState);\n    const htmlContent = draftToHtml(rawContent);\n\n    console.log(\"entityMap:\", rawContent.entityMap);\n    console.log(\"작성된 HTML:\", htmlContent);\n\n    // 여기서 서버에 htmlContent 전송하는 로직 추가 가능\n  };\n\n  return (\n    <div style={{ maxWidth: 800, margin: \"auto\" }}>\n      <h2>게시글 작성</h2>\n      <Editor\n        editorState={editorState}\n        onEditorStateChange={onEditorStateChange}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n        toolbar={{\n          image: {\n            uploadCallback: uploadImageCallback,\n            previewImage: true,\n            alt: { present: true, mandatory: false },\n          },\n        }}\n      />\n      <button\n        style={{\n          marginTop: 20,\n          padding: \"10px 20px\",\n          backgroundColor: \"#4F46E5\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: \"pointer\",\n        }}\n        onClick={handleSubmit}\n      >\n        글 업로드\n      </button>\n    </div>\n  );\n};\n\nexport default PostTemp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}