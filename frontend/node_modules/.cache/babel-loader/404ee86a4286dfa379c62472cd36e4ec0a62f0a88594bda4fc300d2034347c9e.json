{"ast":null,"code":"const loadAround = useCallback(async (startIndex, stopIndex) => {\n  setPosts(prevPosts => {\n    const newPosts = new Map(prevPosts);\n    const fetchMissingPosts = async () => {\n      for (let i = startIndex; i <= stopIndex; i++) {\n        if (!newPosts.has(i)) {\n          const post = await fetchPost(i);\n          if (post) newPosts.set(i, post);\n        }\n      }\n      const min = Math.max(0, startIndex - BUFFER);\n      const max = stopIndex + BUFFER;\n      for (let key of newPosts.keys()) {\n        if (key < min || key > max) {\n          newPosts.delete(key);\n        }\n      }\n      setPosts(new Map(newPosts)); // 여기도 필요함 (내부 비동기)\n    };\n    fetchMissingPosts();\n    return prevPosts; // 임시 반환 (비동기 함수 내에서 실제 업데이트)\n  });\n}, []);","map":{"version":3,"names":["loadAround","useCallback","startIndex","stopIndex","setPosts","prevPosts","newPosts","Map","fetchMissingPosts","i","has","post","fetchPost","set","min","Math","max","BUFFER","key","keys","delete"],"sources":["/home/hyogun/바탕화면/dumbo/frontend/src/components/ScrollTest.js"],"sourcesContent":["const loadAround = useCallback(async (startIndex, stopIndex) => {\n  setPosts((prevPosts) => {\n    const newPosts = new Map(prevPosts);\n\n    const fetchMissingPosts = async () => {\n      for (let i = startIndex; i <= stopIndex; i++) {\n        if (!newPosts.has(i)) {\n          const post = await fetchPost(i);\n          if (post) newPosts.set(i, post);\n        }\n      }\n\n      const min = Math.max(0, startIndex - BUFFER);\n      const max = stopIndex + BUFFER;\n\n      for (let key of newPosts.keys()) {\n        if (key < min || key > max) {\n          newPosts.delete(key);\n        }\n      }\n\n      setPosts(new Map(newPosts)); // 여기도 필요함 (내부 비동기)\n    };\n\n    fetchMissingPosts();\n    return prevPosts; // 임시 반환 (비동기 함수 내에서 실제 업데이트)\n  });\n}, []);\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,WAAW,CAAC,OAAOC,UAAU,EAAEC,SAAS,KAAK;EAC9DC,QAAQ,CAAEC,SAAS,IAAK;IACtB,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACF,SAAS,CAAC;IAEnC,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,KAAK,IAAIC,CAAC,GAAGP,UAAU,EAAEO,CAAC,IAAIN,SAAS,EAAEM,CAAC,EAAE,EAAE;QAC5C,IAAI,CAACH,QAAQ,CAACI,GAAG,CAACD,CAAC,CAAC,EAAE;UACpB,MAAME,IAAI,GAAG,MAAMC,SAAS,CAACH,CAAC,CAAC;UAC/B,IAAIE,IAAI,EAAEL,QAAQ,CAACO,GAAG,CAACJ,CAAC,EAAEE,IAAI,CAAC;QACjC;MACF;MAEA,MAAMG,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEd,UAAU,GAAGe,MAAM,CAAC;MAC5C,MAAMD,GAAG,GAAGb,SAAS,GAAGc,MAAM;MAE9B,KAAK,IAAIC,GAAG,IAAIZ,QAAQ,CAACa,IAAI,CAAC,CAAC,EAAE;QAC/B,IAAID,GAAG,GAAGJ,GAAG,IAAII,GAAG,GAAGF,GAAG,EAAE;UAC1BV,QAAQ,CAACc,MAAM,CAACF,GAAG,CAAC;QACtB;MACF;MAEAd,QAAQ,CAAC,IAAIG,GAAG,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEDE,iBAAiB,CAAC,CAAC;IACnB,OAAOH,SAAS,CAAC,CAAC;EACpB,CAAC,CAAC;AACJ,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}